m4trace:/usr/share/aclocal/argz.m4:12: -1- AC_DEFUN([gl_FUNC_ARGZ], [gl_PREREQ_ARGZ

AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for `error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [ARGZ_H=argz.h; AC_LIBOBJ([argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test "$cross_compiling" != no; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | sed -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test "$lt_os_major" -gt 1 \
		|| { test "$lt_os_major" -eq 1 \
		  && { test "$lt_os_minor" -gt 5 \
		    || { test "$lt_os_minor" -eq 5 \
		      && test "$lt_os_micro" -gt 24; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test $lt_cv_sys_argz_works = yes],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [ARGZ_H=argz.h
        AC_LIBOBJ([argz])])])

AC_SUBST([ARGZ_H])
])
m4trace:/usr/share/aclocal/argz.m4:79: -1- AC_DEFUN([gl_PREREQ_ARGZ], [:])
m4trace:/usr/share/aclocal/ltdl.m4:16: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/share/aclocal/ltdl.m4:68: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:124: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:213: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/share/aclocal/ltdl.m4:226: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test "x$with_included_ltdl" != xyes; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: `$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: `$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR([`--with-ltdl-include' and `--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL="-I$with_ltdl_include"
	;;
esac
INCLTDL="$LTDLINCL"

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | sed "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AC_DEFUN([AC_LIB_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AC_DEFUN([LT_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:367: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([gl_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's,^[[      ]]*,,;s,[[ :]].*$,,'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=ltdl
LTDLOPEN=`eval "\\$ECHO \"$libname_spec\""`
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/share/aclocal/ltdl.m4:437: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this `case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd* | netbsdelf*-gnu)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say `no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to `yes'.  Without it, it would be `no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say `yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test "$lt_cv_sys_dlopen_deplibs" != yes; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:536: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:536: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:543: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([which extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:559: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:559: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:566: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([which variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var="$shlibpath_var"])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:578: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:578: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:585: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path="$sys_lib_dlsearch_path_spec"])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path="$dir"
    else
      sys_dlsearch_path="$sys_dlsearch_path$PATH_SEPARATOR$dir"
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:632: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required" ; then
	  LIBADD_DLOPEN="-ldl"
	fi
	libltdl_cv_lib_dl_dlopen="yes"
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen="yes"
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN="-lsvld" libltdl_cv_func_dlopen="yes"
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test x"$libltdl_cv_func_dlopen" = xyes || test x"$libltdl_cv_lib_dl_dlopen" = xyes
then
  lt_save_LIBS="$LIBS"
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS="$lt_save_LIBS"
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD="-ldld"])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | os2* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

AC_LANG_POP
])
m4trace:/usr/share/aclocal/ltdl.m4:725: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:725: -1- AC_DEFUN([AC_LTDL_DLLIB], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:733: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/share/aclocal/ltdl.m4:770: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:770: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:777: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
if test x"$lt_cv_sys_symbol_underscore" = xyes; then
  if test x"$libltdl_cv_func_dlopen" = xyes ||
     test x"$libltdl_cv_lib_dl_dlopen" = xyes ; then
	AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
	  [libltdl_cv_need_uscore],
	  [libltdl_cv_need_uscore=unknown
          save_LIBS="$LIBS"
          LIBS="$LIBS $LIBADD_DLOPEN"
	  _LT_TRY_DLOPEN_SELF(
	    [libltdl_cv_need_uscore=no], [libltdl_cv_need_uscore=yes],
	    [],				 [libltdl_cv_need_uscore=cross])
	  LIBS="$save_LIBS"
	])
  fi
fi

if test x"$libltdl_cv_need_uscore" = xyes; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:802: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:802: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal-1.11/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.11'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.11.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.11/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.11.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.11/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/usr/share/aclocal-1.11/cond.m4:15: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ(2.52)dnl
 ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.11/depend.m4:28: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                   [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.11/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.11/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE(dependency-tracking,
[  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/depout.m4:14: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.11/depout.m4:75: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.11/init.m4:26: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
AM_MISSING_PROG(AUTOCONF, autoconf)
AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
AM_MISSING_PROG(AUTOHEADER, autoheader)
AM_MISSING_PROG(MAKEINFO, makeinfo)
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AM_PROG_MKDIR_P])dnl
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/usr/share/aclocal-1.11/init.m4:126: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.11/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST(install_sh)])
m4trace:/usr/share/aclocal-1.11/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.11/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.11/minuso.m4:14: -1- AC_DEFUN([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC_C_O])dnl
AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
# FIXME: we rely on the cache variable name because
# there is no other way.
set dummy $CC
am_cc=`echo $[2] | sed ['s/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/']`
eval am_t=\$ac_cv_prog_cc_${am_cc}_c_o
if test "$am_t" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
dnl Make sure AC_PROG_CC is never called again, or it will override our
dnl setting of CC.
m4_define([AC_PROG_CC],
          [m4_fatal([AC_PROG_CC cannot be called after AM_PROG_CC_C_O])])
])
m4trace:/usr/share/aclocal-1.11/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.11/missing.m4:24: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN([`missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.11/mkdirp.m4:11: -1- AC_DEFUN([AM_PROG_MKDIR_P], [AC_PREREQ([2.60])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
dnl while keeping a definition of mkdir_p for backward compatibility.
dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
dnl Makefile.ins that do not define MKDIR_P, so we do our own
dnl adjustment using top_builddir (which is defined more often than
dnl MKDIR_P).
AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
case $mkdir_p in
  [[\\/$]]* | ?:[[\\/]]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac
])
m4trace:/usr/share/aclocal-1.11/options.m4:13: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.11/options.m4:19: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), 1)])
m4trace:/usr/share/aclocal-1.11/options.m4:25: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.11/options.m4:31: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.11/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.11/sanity.m4:14: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT(yes)])
m4trace:/usr/share/aclocal-1.11/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules],
[  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')])
case $enable_silent_rules in
yes) AM_DEFAULT_VERBOSITY=0;;
no)  AM_DEFAULT_VERBOSITY=1;;
*)   AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.11/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.11/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.11/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.
AM_MISSING_PROG([AMTAR], [tar])
m4_if([$1], [v7],
     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of `-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:build/aclocal.cairo.m4:11: -1- AC_DEFUN([CAIRO_BIGENDIAN], [dnl
	case $host_os in
		darwin*)
	AH_VERBATIM([X_BYTE_ORDER],
[
/* Deal with multiple architecture compiles on Mac OS X */
#ifdef __APPLE_CC__
#ifdef __BIG_ENDIAN__
#define WORDS_BIGENDIAN 1
#define FLOAT_WORDS_BIGENDIAN 1
#else
#undef WORDS_BIGENDIAN
#undef FLOAT_WORDS_BIGENDIAN
#endif
#endif
])
		;;
		*) 
	AC_C_BIGENDIAN
	AX_C_FLOAT_WORDS_BIGENDIAN
		;;
	esac
])
m4trace:build/aclocal.cairo.m4:40: -1- AC_DEFUN([CAIRO_CHECK_FUNCS_WITH_FLAGS], [dnl 
	_save_cflags="$CFLAGS"
	_save_libs="$LIBS"
	CFLAGS="$CFLAGS $2"
	LIBS="$LIBS $3"
	AC_CHECK_FUNCS($1, $4, $5)
	CFLAGS="$_save_cflags"
	LIBS="$_save_libs"
])
m4trace:build/aclocal.cairo.m4:56: -1- AC_DEFUN([CAIRO_CONFIG_COMMANDS], [dnl
	AC_CONFIG_COMMANDS($1,
	[
		_config_file=$1
		_tmp_file=cairoconf.tmp
		AC_MSG_NOTICE([creating $_config_file])
		{
			$2
		} >> "$_tmp_file" ||
	        AC_MSG_ERROR([failed to write to $_tmp_file])

		if cmp -s "$_tmp_file" "$_config_file"; then
		  AC_MSG_NOTICE([$_config_file is unchanged])
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          AC_MSG_ERROR([failed to update $_config_file])
		fi
	], $3)
])
m4trace:build/aclocal.cairo.m4:79: -1- AC_DEFUN([CAIRO_CC_TRY_FLAG], [dnl
	AC_MSG_CHECKING([whether $CC supports $1])

	_save_cflags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror $1"
	AC_COMPILE_IFELSE([ ], [cairo_cc_flag=yes], [cairo_cc_flag=no])
	CFLAGS="$_save_cflags"

	if test "x$cairo_cc_flag" = "xyes"; then
		ifelse([$2], , :, [$2])
	else
		ifelse([$3], , :, [$3])
	fi
	AC_MSG_RESULT([$cairo_cc_flag])
])
m4trace:build/aclocal.cairo.m4:97: -1- AC_DEFUN([CAIRO_CC_TRY_LINK_FLAG], [dnl
	AC_MSG_CHECKING([whether $CC supports $1])

	_save_cflags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror $1"
	AC_LINK_IFELSE([int main(void){ return 0;} ],
                       [cairo_cc_flag=yes],
                       [cairo_cc_flag=no])
	CFLAGS="$_save_cflags"

	if test "x$cairo_cc_flag" = "xyes"; then
		ifelse([$2], , :, [$2])
	else
		ifelse([$3], , :, [$3])
	fi
	AC_MSG_RESULT([$cairo_cc_flag])
])
m4trace:build/aclocal.cairo.m4:118: -1- AC_DEFUN([CAIRO_CHECK_NATIVE_ATOMIC_PRIMITIVES], [dnl
	AC_CACHE_CHECK([for native atomic primitives], cairo_cv_atomic_primitives,
	[
		cairo_cv_atomic_primitives="none"

		AC_TRY_LINK([
int atomic_add(int i) { return __sync_fetch_and_add (&i, 1); }
int atomic_cmpxchg(int i, int j, int k) { return __sync_val_compare_and_swap (&i, j, k); }
], [],
		  cairo_cv_atomic_primitives="Intel"
		  )
	])
	if test "x$cairo_cv_atomic_primitives" = xIntel; then
		AC_DEFINE(HAVE_INTEL_ATOMIC_PRIMITIVES, 1,
			  [Enable if your compiler supports the Intel __sync_* atomic primitives])
	fi
])
m4trace:build/aclocal.cairo.m4:139: -1- AC_DEFUN([CAIRO_CHECK_ATOMIC_OP_NEEDS_MEMORY_BARRIER], [dnl
	AC_CACHE_CHECK([whether atomic ops require a memory barrier], cairo_cv_atomic_op_needs_memory_barrier,
	[
		case $host_cpu in
		    i?86)	cairo_cv_atomic_op_needs_memory_barrier="no"  ;;
		    x86_64)	cairo_cv_atomic_op_needs_memory_barrier="no"  ;;
		    arm*)	cairo_cv_atomic_op_needs_memory_barrier="no"  ;;
		    *)		cairo_cv_atomic_op_needs_memory_barrier="yes" ;;
		esac
	])
	if test "x$cairo_cv_atomic_op_needs_memory_barrier" = "xyes"; then
	    AC_DEFINE_UNQUOTED(ATOMIC_OP_NEEDS_MEMORY_BARRIER, 1,
			       [whether memory barriers are needed around atomic operations])
	fi
])
m4trace:build/aclocal.cairo.m4:156: -1- AC_DEFUN([CAIRO_TEXT_WRAP], [m4_text_wrap([$1], [$2],, 78)])
m4trace:build/aclocal.dolt.m4:11: -1- AC_DEFUN([DOLT], [
AC_REQUIRE([AC_CANONICAL_HOST])
# dolt, a replacement for libtool
# Josh Triplett <josh@freedesktop.org>
AC_PATH_PROG(DOLT_BASH, bash)
AC_MSG_CHECKING([if dolt supports this host])
dolt_supported=yes
if test x$DOLT_BASH = x; then
    dolt_supported=no
fi
if test x$GCC != xyes; then
    dolt_supported=no
fi
case $host in
i?86-*-linux*|x86_64-*-linux*|powerpc-*-linux* \
|amd64-*-freebsd*|i?86-*-freebsd*|ia64-*-freebsd*)
    pic_options='-fPIC'
    ;;
i?86-apple-darwin*)
    pic_options='-fno-common'
    ;;
*)
    dolt_supported=no
    ;;
esac
if test x$dolt_supported = xno ; then
    AC_MSG_RESULT([no, falling back to libtool])
    LTCOMPILE='$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(COMPILE)'
    LTCXXCOMPILE='$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXXCOMPILE)'
else
    AC_MSG_RESULT([yes, replacing libtool])

dnl Start writing out doltcompile.
    cat <<__DOLTCOMPILE__EOF__ >doltcompile
#!$DOLT_BASH
__DOLTCOMPILE__EOF__
    cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
args=("$[]@")
for ((arg=0; arg<${#args@<:@@@:>@}; arg++)) ; do
    if test x"${args@<:@$arg@:>@}" = x-o ; then
        objarg=$((arg+1))
        break
    fi
done
if test x$objarg = x ; then
    echo 'Error: no -o on compiler command line' 1>&2
    exit 1
fi
lo="${args@<:@$objarg@:>@}"
obj="${lo%.lo}"
if test x"$lo" = x"$obj" ; then
    echo "Error: libtool object file name \"$lo\" does not end in .lo" 1>&2
    exit 1
fi
objbase="${obj##*/}"
__DOLTCOMPILE__EOF__

dnl Write out shared compilation code.
    if test x$enable_shared = xyes; then
        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
libobjdir="${obj%$objbase}.libs"
if test ! -d "$libobjdir" ; then
    mkdir_out="$(mkdir "$libobjdir" 2>&1)"
    mkdir_ret=$?
    if test "$mkdir_ret" -ne 0 && test ! -d "$libobjdir" ; then
	echo "$mkdir_out" 1>&2
        exit $mkdir_ret
    fi
fi
pic_object="$libobjdir/$objbase.o"
args@<:@$objarg@:>@="$pic_object"
__DOLTCOMPILE__EOF__
    cat <<__DOLTCOMPILE__EOF__ >>doltcompile
"\${args@<:@@@:>@}" $pic_options -DPIC || exit \$?
__DOLTCOMPILE__EOF__
    fi

dnl Write out static compilation code.
dnl Avoid duplicate compiler output if also building shared objects.
    if test x$enable_static = xyes; then
        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
non_pic_object="$obj.o"
args@<:@$objarg@:>@="$non_pic_object"
__DOLTCOMPILE__EOF__
        if test x$enable_shared = xyes; then
            cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
"${args@<:@@@:>@}" >/dev/null 2>&1 || exit $?
__DOLTCOMPILE__EOF__
        else
            cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
"${args@<:@@@:>@}" || exit $?
__DOLTCOMPILE__EOF__
        fi
    fi

dnl Write out the code to write the .lo file.
dnl The second line of the .lo file must match "^# Generated by .*libtool"
    cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
{
echo "# $lo - a libtool object file"
echo "# Generated by doltcompile, not libtool"
__DOLTCOMPILE__EOF__

    if test x$enable_shared = xyes; then
        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
echo "pic_object='.libs/${objbase}.o'"
__DOLTCOMPILE__EOF__
    else
        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
echo pic_object=none
__DOLTCOMPILE__EOF__
    fi

    if test x$enable_static = xyes; then
        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
echo "non_pic_object='${objbase}.o'"
__DOLTCOMPILE__EOF__
    else
        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
echo non_pic_object=none
__DOLTCOMPILE__EOF__
    fi

    cat <<'__DOLTCOMPILE__EOF__' >>doltcompile
} > "$lo"
__DOLTCOMPILE__EOF__

dnl Done writing out doltcompile; substitute it for libtool compilation.
    chmod +x doltcompile
    LTCOMPILE='$(top_builddir)/doltcompile $(COMPILE)'
    LTCXXCOMPILE='$(top_builddir)/doltcompile $(CXXCOMPILE)'

dnl automake ignores LTCOMPILE and LTCXXCOMPILE when it has separate CFLAGS for
dnl a target, so write out a libtool wrapper to handle that case.
dnl Note that doltlibtool does not handle inferred tags or option arguments
dnl without '=', because automake does not use them.
    cat <<__DOLTLIBTOOL__EOF__ > doltlibtool
#!$DOLT_BASH
__DOLTLIBTOOL__EOF__
    cat <<'__DOLTLIBTOOL__EOF__' >>doltlibtool
top_builddir_slash="${0%%doltlibtool}"
: ${top_builddir_slash:=./}
args=()
modeok=false
tagok=false
for arg in "$[]@"; do
    case "$arg" in
        --mode=compile) modeok=true ;;
        --tag=CC|--tag=CXX) tagok=true ;;
        *) args@<:@${#args[@]}@:>@="$arg" ;;
    esac
done
if $modeok && $tagok ; then
    . ${top_builddir_slash}doltcompile "${args@<:@@@:>@}"
else
    exec ${top_builddir_slash}libtool "$[]@"
fi
__DOLTLIBTOOL__EOF__

dnl Done writing out doltlibtool; substitute it for libtool.
    chmod +x doltlibtool
    LIBTOOL='$(top_builddir)/doltlibtool'
fi
AC_SUBST(LTCOMPILE)
AC_SUBST(LTCXXCOMPILE)
# end dolt
])
m4trace:build/aclocal.enable.m4:41: -1- AC_DEFUN([_CAIRO_ENABLE], [dnl
	dnl Sanity check ID
	m4_if(
		[$1],
		m4_tolower(AS_TR_SH([$1])),
		,
		[m4_fatal([invalid feature name `$1'])]
	)dnl
	m4_pushdef([cr_feature], [$1])dnl
	m4_pushdef([cr_feature_name], m4_normalize([$2]))dnl
	m4_pushdef([cr_feature_what], m4_normalize([$3]))dnl
	m4_pushdef([cr_feature_default], m4_normalize([$4]))dnl
	m4_pushdef([cr_feature_commands], [$5])dnl
	m4_pushdef([cr_feature_commands_len], m4_len([$5]))dnl
	dnl
	m4_pushdef([cr_feature_arg], m4_translit([$1],_,-))dnl
	dnl
	dnl Sanity check default
	m4_case(
		cr_feature_default,
		[no],,
		[yes],,
		[auto],,
		[always],,
		[m4_fatal([Invalid default value `]cr_feature_default[' for feature `]cr_feature['])]
	)dnl
	dnl
	m4_if(cr_feature_default, [always],
	[dnl
		enable_$1=yes
	],[dnl
		AC_ARG_ENABLE(cr_feature_arg,
			      AS_HELP_STRING([--enable-]cr_feature_arg[=@<:@no/auto/yes@:>@],
					     [Enable cairo's ]cr_feature_name[ feature @<:@default=]cr_feature_default[@:>@]),
			      enable_$1=$enableval, enable_$1=cr_feature_default)
	])dnl
	dnl
	AS_CASE([$enable_$1],
	[no],[dnl
		use_$1="no (disabled, use --enable-cr_feature_arg to enable)"
	],dnl
	[yes|auto],[dnl
		dnl Cache invalidating:
		dnl
		dnl To be extremely user-friendly, we discard cache results if
		dnl any of the following conditions happens:
		dnl
		dnl   - Global cache version changes
		dnl     This is used to force a cache invalidation for these
		dnl     macros
		dnl
		dnl   - Set of cached variables changes
		dnl     (XXX should also do if the default value of such
		dnl     variables changes.  Argh...)
		dnl
		dnl   - Length of the COMMANDS string changes!
		dnl     (This is much more friendly to the cache than caching
		dnl     the commands string itself.  Note that this still does
		dnl     not catch all valid cases where we should be
		dnl     invalidting.  For example if COMMANDS uses
		dnl     variables/macros defined outside, we don't detect changes
		dnl     in those variables.  Also doesn't detect in-place
		dnl     modifications like bumping verson numbers.
		dnl     Just modify COMMANDS in an obvious way to force recheck.
		dnl     Hashing sounds a bit too harsh to do here...)
		dnl
		dnl  - If feature is requested and cached results for enabling
		dnl    feature is no.  We are going to terminate with an error
		dnl    if this happens anyway, so we can be more friendly by
		dnl    assuming that user installed some missing pieces since
		dnl    last time and so we recheck.  Although even in that
		dnl    case other cached values probably get in the way...
		dnl
		AS_IF([test "x$cairo_cv_[]$1[]_cache_version" != "x[]cr_cache_version" -o \
			    "x$cairo_cv_[]$1[]_cache_commands_len" != "x[]cr_feature_commands_len" -o \
			    "x$cairo_cv_[]$1[]_cache_vars" != "x[]_CAIRO_FEATURE_VARS"],
		      [unset cairo_cv_[]$1[]_use])
		AS_IF([test "x$enable_$1" = xyes -a "x$cairo_cv_[]$1[]_use" != xyes],
		      [unset cairo_cv_[]$1[]_use])

		AC_CACHE_CHECK([for cairo's ]cr_feature_name[ feature], cairo_cv_[]$1[]_use,
		[dnl
			echo
			use_[]$1=yes
			CAIRO_FEATURE_VARS_FOREACH(cr_var, [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))]m4_newline)
			cr_feature_commands
			cairo_cv_[]$1[]_use=$use_[]$1
			cairo_cv_[]$1[]_cache_vars="_CAIRO_FEATURE_VARS"
			cairo_cv_[]$1[]_cache_commands_len="cr_feature_commands_len"
			cairo_cv_[]$1[]_cache_version="cr_cache_version"
			CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var]m4_newline)
			AC_MSG_CHECKING([whether cairo's ]cr_feature_name[ feature could be enabled])
		])dnl

		use_[]$1=$cairo_cv_[]$1[]_use

		AS_IF([test "x$enable_$1" = "xyes" -a "x$use_$1" != xyes],
		[dnl
			AC_MSG_ERROR(
				m4_case(cr_feature_default,
					[always],	[mandatory],
					[yes],		[recommended],
					,		[requested]
				) cr_feature_name[ feature could not be enabled])
		])dnl
	],dnl
	[dnl	
		AC_MSG_ERROR([invalid argument passed to --enable-]cr_feature_arg[: `$use_$1', should be one of @<:@no/auto/yes@:>@])
	])dnl

	AS_IF([test "x$use_$1" = "xyes"],
	[dnl
		CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var]m4_newline)
		CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var],
		[dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])dnl
	],[dnl
		dnl If not enabled, empty the vars so no one accidentally uses them.
		CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var]m4_newline)
	])dnl

	_CAIRO_FEATURE_HOOKS(cr_feature, cr_feature_name, cr_feature_default, cr_feature_what)dnl

	m4_popdef([cr_feature])dnl
	m4_popdef([cr_feature_name])dnl
	m4_popdef([cr_feature_what])dnl
	m4_popdef([cr_feature_default])dnl
	m4_popdef([cr_feature_commands])dnl
	m4_popdef([cr_feature_commands_len])dnl
	m4_popdef([cr_feature_arg])dnl
])
m4trace:build/aclocal.enable.m4:188: -1- AC_DEFUN([CAIRO_FEATURE_VARS_REGISTER], [dnl
	m4_foreach_w([cr_var], [$1],
		     [m4_append_uniq([_CAIRO_FEATURE_VARS], cr_var, [ ],,
				     [m4_fatal([Feature variable `]cr_var[' already registered])])])dnl
	m4_foreach_w([cr_var], [$1],
	[dnl
		m4_define([cr_var_default_]cr_var[_value], m4_default([$2],[[$ac_env_[]]cr_feature[[]_]]cr_var[[_value]]))dnl
	])dnl
])
m4trace:build/aclocal.enable.m4:205: -1- AC_DEFUN([CAIRO_FEATURE_VARS_FOREACH], [dnl
	m4_foreach_w([$1], _CAIRO_FEATURE_VARS, [$2])dnl
])
m4trace:build/aclocal.enable.m4:238: -1- AC_DEFUN([CAIRO_ACCUMULATORS_REGISTER], [dnl
	_CAIRO_ACCUMULATORS_REGISTER([$1],[$2],_CAIRO_SH_ESCAPE([$3]))dnl
])
m4trace:build/aclocal.enable.m4:247: -1- AC_DEFUN([CAIRO_ACCUMULATORS_REGISTER_UNQUOTED], [dnl
	_CAIRO_ACCUMULATORS_REGISTER([$1],[$2],_CAIRO_SH_ESCAPE_UNQUOTED([$3]))dnl
])
m4trace:build/aclocal.enable.m4:268: -1- AC_DEFUN([CAIRO_ACCUMULATE], [dnl
	_CAIRO_ACCUMULATE([$1], [$2], [CAIRO_$1="${CAIRO_$1}]m4_do([cr_acc_$1_sep])["_CAIRO_SH_ESCAPE([$2])])dnl
])
m4trace:build/aclocal.enable.m4:278: -1- AC_DEFUN([CAIRO_ACCUMULATE_BEFORE], [dnl
	_CAIRO_ACCUMULATE([$1], [$2], [CAIRO_$1=_CAIRO_SH_ESCAPE([$2])"]m4_do([cr_acc_$1_sep])[${CAIRO_$1}"])dnl
])
m4trace:build/aclocal.enable.m4:295: -1- AC_DEFUN([CAIRO_ACCUMULATE_UNQUOTED], [dnl
	_CAIRO_ACCUMULATE_UNQUOTED([$1], [$2], [CAIRO_$1="${CAIRO_$1}]m4_do([cr_acc_$1_sep])["]_CAIRO_SH_ESCAPE_UNQUOTED([$2]))dnl
])
m4trace:build/aclocal.enable.m4:306: -1- AC_DEFUN([CAIRO_ACCUMULATE_UNQUOTED_BEFORE], [dnl
	_CAIRO_ACCUMULATE_UNQUOTED([$1], [$2], [CAIRO_$1=]_CAIRO_SH_ESCAPE_UNQUOTED([$2])["]m4_do([cr_acc_$1_sep])[${CAIRO_$1}"])dnl
])
m4trace:build/aclocal.enable.m4:316: -1- AC_DEFUN([CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED], [dnl
	_CAIRO_ACCUMULATE([$1], [$2], [CAIRO_$1="${CAIRO_$1}]m4_do([cr_acc_$1_sep])["]_CAIRO_SH_ESCAPE_UNQUOTED([$2]))dnl
])
m4trace:build/aclocal.enable.m4:326: -1- AC_DEFUN([CAIRO_ACCUMULATE_UNQUOTED_BEFORE], [dnl
	_CAIRO_ACCUMULATE([$1], [$2], [CAIRO_$1=]_CAIRO_SH_ESCAPE_UNQUOTED([$2])["]m4_do([cr_acc_$1_sep])[${CAIRO_$1}"])dnl
])
m4trace:build/aclocal.enable.m4:337: -1- AC_DEFUN([CAIRO_ACCUMULATORS_FOREACH], [dnl
	m4_foreach_w([$1], _CAIRO_ACCUMULATORS, [$2])dnl
])
m4trace:build/aclocal.enable.m4:353: -1- AC_DEFUN([CAIRO_ACCUMULATED_FEATURE_VARS_REGISTER], [dnl
	m4_foreach_w([cr_var], [$1],
		     [m4_append_uniq([_CAIRO_ACCUMULATED_FEATURE_VARS], cr_var, [ ],,
				     [m4_fatal([Accumulated feature variable `]cr_var[' already registered])])])dnl
	CAIRO_FEATURE_VARS_REGISTER([$1],[$2])dnl
	CAIRO_ACCUMULATORS_REGISTER_UNQUOTED([$1],[$3],[$4])dnl
])
m4trace:build/aclocal.enable.m4:368: -1- AC_DEFUN([CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH], [dnl
	m4_foreach_w([$1], _CAIRO_ACCUMULATED_FEATURE_VARS, [$2])dnl
])
m4trace:build/aclocal.enable.m4:380: -1- AC_DEFUN([CAIRO_FEATURE_IF_ENABLED], [dnl
	AS_IF([test "x$use_]m4_default([$1], cr_feature)[" = xyes], [$2], [$3])dnl
])
m4trace:build/aclocal.enable.m4:450: -1- AC_DEFUN([CAIRO_FEATURE_HOOK_REGISTER], [dnl
	m4_append([_CAIRO_FEATURE_HOOKS],
	[dnl
		_CAIRO_FEATURE_HOOK_MATCH_M4([$2], cr_feature_default,
		[_CAIRO_FEATURE_HOOK_MATCH_M4([$3], cr_feature_what,
		 [_CAIRO_FEATURE_HOOK_MATCH_SH_BOOL([$1], [$use_]cr_feature,
		  [$4]
		)])])dnl
	], m4_newline)dnl
])
m4trace:build/aclocal.float.m4:11: -1- AC_DEFUN([AX_C_FLOAT_WORDS_BIGENDIAN], [AC_CACHE_CHECK(whether float word ordering is bigendian,
                  ax_cv_c_float_words_bigendian, [

# The endianess is detected by first compiling C code that contains a special
# double float value, then grepping the resulting object file for certain
# strings of ascii values. The double is specially crafted to have a
# binary representation that corresponds with a simple string. In this
# implementation, the string "noonsees" was selected because the individual
# word values ("noon" and "sees") are palindromes, thus making this test
# byte-order agnostic. If grep finds the string "noonsees" in the object
# file, the target platform stores float words in big-endian order. If grep
# finds "seesnoon", float words are in little-endian order. If neither value
# is found, the user is instructed to specify the ordering.

ax_cv_c_float_words_bigendian=unknown
AC_COMPILE_IFELSE([AC_LANG_SOURCE([[

double d = 90904234967036810337470478905505011476211692735615632014797120844053488865816695273723469097858056257517020191247487429516932130503560650002327564517570778480236724525140520121371739201496540132640109977779420565776568942592.0;

]])], [

if strings - conftest.$ac_objext | grep noonsees >/dev/null ; then
  ax_cv_c_float_words_bigendian=yes
fi
if strings - conftest.$ac_objext | grep seesnoon >/dev/null ; then
  if test "$ax_cv_c_float_words_bigendian" = unknown; then
    ax_cv_c_float_words_bigendian=no
  else
    ax_cv_c_float_words_bigendian=unknown
  fi
fi

])])

case $ax_cv_c_float_words_bigendian in
  yes)
    m4_default([$1],
      [AC_DEFINE([FLOAT_WORDS_BIGENDIAN], 1,
                 [Define to 1 if your system stores words within floats
                  with the most significant word first])]) ;;
  no)
    $2 ;;
  *)
    m4_default([$3],
      [AC_MSG_ERROR([

Unknown float word ordering. You need to manually preset
ax_cv_c_float_words_bigendian=no (or yes) according to your system.

    ])]) ;;
esac

])
m4trace:build/aclocal.gtk-doc.m4:7: -1- AC_DEFUN([GTK_DOC_CHECK], [
  AC_BEFORE([AC_PROG_LIBTOOL],[$0])dnl setup libtool first
  AC_BEFORE([AM_PROG_LIBTOOL],[$0])dnl setup libtool first
  dnl for overriding the documentation installation directory
  AC_ARG_WITH([html-dir],
    AS_HELP_STRING([--with-html-dir=PATH], [path to installed docs]),,
    [with_html_dir='${datadir}/gtk-doc/html'])
  HTML_DIR="$with_html_dir"
  AC_SUBST([HTML_DIR])

  dnl enable/disable documentation building
  AC_ARG_ENABLE([gtk-doc],
    AS_HELP_STRING([--enable-gtk-doc],
                   [use gtk-doc to build documentation [[default=no]]]),,
    [enable_gtk_doc=no])

  if test x$enable_gtk_doc = xyes; then
    ifelse([$1],[],
      [PKG_CHECK_EXISTS([gtk-doc],,
                        AC_MSG_ERROR([gtk-doc not installed and --enable-gtk-doc requested]))],
      [PKG_CHECK_EXISTS([gtk-doc >= $1],,
                        AC_MSG_ERROR([You need to have gtk-doc >= $1 installed to build gtk-doc]))])
  fi

  AC_MSG_CHECKING([whether to build gtk-doc documentation])
  AC_MSG_RESULT($enable_gtk_doc)

  AC_PATH_PROGS(GTKDOC_CHECK,gtkdoc-check,)

  AM_CONDITIONAL([ENABLE_GTK_DOC], [test x$enable_gtk_doc = xyes])
  AM_CONDITIONAL([GTK_DOC_USE_LIBTOOL], [test -n "$LIBTOOL"])
])
m4trace:build/aclocal.makefile.m4:26: -1- AC_DEFUN([CAIRO_INIT_MAKEFILES], [dnl
	dnl Allow feature tags in the output
	m4_pattern_allow(^CAIRO_HAS_)dnl

	dnl Automake conditionals for non-builtin features
	CAIRO_FEATURE_HOOK_REGISTER(*,!always,*,
	[dnl
		AM_CONDITIONAL(cr_feature_tag, [test "x$use_]cr_feature[" = xyes])dnl
	])dnl

	CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([_],[$1],[],[[# Generated by configure.  Modify to customize.]])dnl
	CAIRO_MAKEFILE_ACCUMULATE_FEATURE([_],*,!always,*,[cr_feature_tag=m4_if(cr_feature_default,[yes],1,[m4_bmatch(cr_feature,[win32],1,0)])])dnl
])
m4trace:build/aclocal.makefile.m4:56: -1- AC_DEFUN([CAIRO_CONFIG_MAKEFILE], [dnl
	m4_append_uniq([_CAIRO_MAKEFILES], [$1], [ ])dnl
	CAIRO_CONFIG_MAKEFILE_PRIVATE([$1], [$2], [$3], [$4])dnl
])
m4trace:build/aclocal.makefile.m4:63: -1- AC_DEFUN([CAIRO_CONFIG_MAKEFILE_WIN32], [dnl
	m4_append_uniq([_CAIRO_MAKEFILES], [$1], [ ])dnl
	CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([$1], [$2], [$3], [$4])dnl
])
m4trace:build/aclocal.makefile.m4:70: -1- AC_DEFUN([CAIRO_CONFIG_MAKEFILE_AMAKE], [dnl
	m4_append_uniq([_CAIRO_MAKEFILES], [$1], [ ])dnl
	CAIRO_CONFIG_MAKEFILE_PRIVATE_AMAKE([$1], [$2], [$3], [$4])dnl
])
m4trace:build/aclocal.makefile.m4:82: -1- AC_DEFUN([CAIRO_CONFIG_MAKEFILE_PRIVATE], [dnl
	m4_ifdef([cr_make_$1_dir],
		 [m4_fatal([Makefile `$1' already registered])])dnl
        m4_define([cr_make_$1_dir],[$2])dnl

	CAIRO_CONFIG_MAKEFILE_PRIVATE_AMAKE([$1], [$2], [$3], [$4])dnl
	CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([$1], [$2], [$3], [$4])dnl
])
m4trace:build/aclocal.makefile.m4:93: -1- AC_DEFUN([CAIRO_CONFIG_MAKEFILE_PRIVATE_AMAKE], [dnl
	m4_ifdef([cr_make_$1_dir_amake],
		 [m4_fatal([Automake makefile `$1' already registered])])dnl
        m4_define([cr_make_$1_dir_amake],[$2])dnl
        m4_define([cr_make_$1_dir_any],[$2])dnl

	dnl Accumulators
	CAIRO_ACCUMULATORS_REGISTER(MAKEFILE_$1_AMAKE, m4_newline, m4_default([$4],[[# Generated by configure.  Do not edit.]])m4_newline)dnl

	dnl Generate
	CAIRO_CONFIG_COMMANDS([$srcdir/]m4_if([$2],[.],,[$2/])[Makefile.am.]m4_default([$3],[features]),
			      [echo "$CAIRO_MAKEFILE_$1_AMAKE"],
			      [CAIRO_MAKEFILE_$1_AMAKE='$CAIRO_MAKEFILE_$1_AMAKE'])dnl
])
m4trace:build/aclocal.makefile.m4:110: -1- AC_DEFUN([CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32], [dnl
	m4_ifdef([cr_make_$1_dir_win32],
		 [m4_fatal([Win32 makefile `$1' already registered])])dnl
        m4_define([cr_make_$1_dir_win32],[$2])dnl
        m4_define([cr_make_$1_dir_any],[$2])dnl

	dnl Accumulators
	CAIRO_ACCUMULATORS_REGISTER(MAKEFILE_$1_WIN32, m4_newline, m4_default([$4],[[# Generated by configure.  Do not edit.]])m4_newline)dnl

	dnl Generate
	CAIRO_CONFIG_COMMANDS([$srcdir/]m4_if([$2],[.],,[$2/])[Makefile.win32.]m4_default([$3],[features]),
			      [echo "$CAIRO_MAKEFILE_$1_WIN32"],
			      [CAIRO_MAKEFILE_$1_WIN32='$CAIRO_MAKEFILE_$1_WIN32'])dnl
])
m4trace:build/aclocal.makefile.m4:140: -1- AC_DEFUN([CAIRO_MAKEFILE_INCLUDE], [dnl
	m4_if([$1],[*],,[_CAIRO_MAKEFILE_CHECK([$1])])dnl
	m4_foreach_w([cr_makefile], m4_if([$1],[*],_CAIRO_MAKEFILES,[$1]),
	[dnl
		m4_ifdef([cr_make_]cr_makefile[_dir_amake],dnl
			 [CAIRO_ACCUMULATE([MAKEFILE_]cr_makefile[_AMAKE],[include $(top_srcdir)/cr_make_]cr_makefile[_dir_amake/$2]m4_newline)]
		)dnl
		m4_ifdef([cr_make_]cr_makefile[_dir_win32],dnl
			 [CAIRO_ACCUMULATE([MAKEFILE_]cr_makefile[_WIN32],[ifeq ($(top_srcdir),)]m4_newline[include $2]m4_newline[else]m4_newline[include $(top_srcdir)/cr_make_]cr_makefile[_dir_win32/$2]m4_newline[endif]m4_newline)]
		)dnl
	])dnl
])
m4trace:build/aclocal.makefile.m4:155: -1- m4_pattern_allow([cr_make_tmp])
m4trace:build/aclocal.makefile.m4:163: -1- AC_DEFUN([CAIRO_MAKEFILE_ACCUMULATE], [dnl
	m4_if([$1],[*],,[_CAIRO_MAKEFILE_CHECK([$1])])dnl
	m4_foreach_w([cr_makefile], m4_if([$1],[*],_CAIRO_MAKEFILES,[$1]),
	[dnl
		m4_pushdef([cr_make_acc_contents],[$2])dnl
		cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents(cr_makefile))
		m4_popdef([cr_make_acc_contents])dnl
		m4_ifdef([cr_make_]cr_makefile[_dir_amake],dnl
			 [CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_]cr_makefile[_AMAKE], [$cr_make_tmp])]
		)dnl
		m4_ifdef([cr_make_]cr_makefile[_dir_win32],dnl
			 [CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_]cr_makefile[_WIN32], [$cr_make_tmp])]
		)dnl
	])dnl
])
m4trace:build/aclocal.makefile.m4:206: -1- AC_DEFUN([CAIRO_MAKEFILE_ACCUMULATE_FEATURE], [dnl
	m4_if([$1],[*],,[_CAIRO_MAKEFILE_CHECK([$1])])dnl
	m4_append([cr_make_acc_counter],[1],[])dnl
	m4_define([cr_make_acc_contents]m4_len(cr_make_acc_counter), [$5])dnl
	CAIRO_FEATURE_HOOK_REGISTER(*,[$3],[$4],
	[dnl
		m4_foreach_w([cr_makefile], m4_if([$1],[*],_CAIRO_MAKEFILES,[$1]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]]m4_len(cr_make_acc_counter)([[cr_makefile,]][$][1],[$][2],[$][3],[$][4])[[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[$2],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[$2],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])dnl
])
m4trace:build/aclocal.pkg.m4:26: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])dnl
if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
		
fi[]dnl
])
m4trace:build/aclocal.pkg.m4:56: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_ifval([$2], [$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:build/aclocal.pkg.m4:82: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:build/aclocal.pkg.m4:102: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $1])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "$2" 2>&1`
        else 
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	ifelse([$4], , [AC_MSG_ERROR(dnl
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT
])],
		[AC_MSG_RESULT([no])
                $4])
elif test $pkg_failed = untried; then
	ifelse([$4], , [AC_MSG_FAILURE(dnl
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])],
		[$4])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	ifelse([$3], , :, [$3])
fi[]dnl
])
m4trace:build/libtool.m4:67: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS="$ltmain"

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:build/libtool.m4:102: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:build/libtool.m4:102: -1- AC_DEFUN([AC_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:build/libtool.m4:103: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:build/libtool.m4:103: -1- AC_DEFUN([AM_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:build/libtool.m4:562: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
cat >"$CONFIG_LT" <<_LTEOF
#! $SHELL
# Generated by $as_me.
# Run this file to recreate a libtool stub with the current configuration.

lt_cl_silent=false
SHELL=\${CONFIG_SHELL-$SHELL}
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AS_SHELL_SANITIZE
_AS_PREPARE

exec AS_MESSAGE_FD>&1
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
\`$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2008 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test $[#] != 0
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try \`$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try \`$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
if test "$no_create" != yes; then
  lt_cl_success=:
  test "$silent" = yes &&
    lt_config_lt_args="$lt_config_lt_args --quiet"
  exec AS_MESSAGE_LOG_FD>/dev/null
  $SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
  exec AS_MESSAGE_LOG_FD>>config.log
  $lt_cl_success || AS_EXIT(1)
fi
])
m4trace:build/libtool.m4:757: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:build/libtool.m4:768: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:build/libtool.m4:830: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:build/libtool.m4:830: -1- AC_DEFUN([AC_LIBTOOL_CXX], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:build/libtool.m4:831: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:build/libtool.m4:831: -1- AC_DEFUN([AC_LIBTOOL_F77], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:build/libtool.m4:832: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:build/libtool.m4:832: -1- AC_DEFUN([AC_LIBTOOL_FC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:build/libtool.m4:833: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:build/libtool.m4:833: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:build/libtool.m4:1402: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:__oline__: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test x"[$]$2" = xyes; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:build/libtool.m4:1444: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:build/libtool.m4:1444: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:build/libtool.m4:1453: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS="$LDFLAGS"
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS="$save_LDFLAGS"
])

if test x"[$]$2" = xyes; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:build/libtool.m4:1488: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:build/libtool.m4:1488: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:build/libtool.m4:1495: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring="ABCD"

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8 ; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test "X"`$SHELL [$]0 --fallback-echo "X$teststring$teststring" 2>/dev/null` \
	         = "XX$teststring$teststring"; } >/dev/null 2>&1 &&
	      test $i != 17 # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n $lt_cv_sys_max_cmd_len ; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:build/libtool.m4:1623: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:build/libtool.m4:1623: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:build/libtool.m4:1724: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test "x$enable_dlopen" != xyes; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen="load_add_on"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen="LoadLibrary"
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen="dlopen"
    lt_cv_dlopen_libs=
    ;;

  darwin*)
  # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
    lt_cv_dlopen="dyld"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen="shl_load"],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen="dlopen"],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test "x$lt_cv_dlopen" != xno; then
    enable_dlopen=yes
  else
    enable_dlopen=no
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS="$CPPFLAGS"
    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS="$LDFLAGS"
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS="$LIBS"
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test "x$lt_cv_dlopen_self" = xyes; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS="$save_CPPFLAGS"
    LDFLAGS="$save_LDFLAGS"
    LIBS="$save_LIBS"
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:build/libtool.m4:1841: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:build/libtool.m4:1841: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:build/libtool.m4:2741: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD="$MAGIC_CMD"
  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS="$lt_save_ifs"
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$1; then
      lt_cv_path_MAGIC_CMD="$ac_dir/$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS="$lt_save_ifs"
  MAGIC_CMD="$lt_save_MAGIC_CMD"
  ;;
esac])
MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:build/libtool.m4:2803: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:build/libtool.m4:2803: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [AC_DIAGNOSE([obsolete], [The macro `AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:build/libtool.m4:2826: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test "$withval" = no || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test "$GCC" = yes; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD="$ac_prog"
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test "$with_gnu_ld" = yes; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS="$lt_save_ifs"
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD="$ac_dir/$ac_prog"
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test "$with_gnu_ld" != no && break
	;;
      *)
	test "$with_gnu_ld" != yes && break
	;;
      esac
    fi
  done
  IFS="$lt_save_ifs"
else
  lt_cv_path_LD="$LD" # Let the user override the test with a path.
fi])
LD="$lt_cv_path_LD"
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:build/libtool.m4:2914: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:build/libtool.m4:2914: -1- AC_DEFUN([AM_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:build/libtool.m4:2915: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:build/libtool.m4:2915: -1- AC_DEFUN([AC_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:build/libtool.m4:3179: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM="$NM"
else
  lt_nm_to_check="${ac_tool_prefix}nm"
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS="$lt_save_ifs"
      test -z "$ac_dir" && ac_dir=.
      tmp_nm="$ac_dir/$lt_tmp_nm"
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
	*/dev/null* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS="$lt_save_ifs"
  done
  : ${lt_cv_path_NM=no}
fi])
if test "$lt_cv_path_NM" != "no"; then
  NM="$lt_cv_path_NM"
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  AC_CHECK_TOOLS(DUMPBIN, ["dumpbin -symbols" "link -dump -symbols"], :)
  AC_SUBST([DUMPBIN])
  if test "$DUMPBIN" != ":"; then
    NM="$DUMPBIN"
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:__oline__: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:__oline__: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:__oline__: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:build/libtool.m4:3257: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:build/libtool.m4:3257: -1- AC_DEFUN([AM_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:build/libtool.m4:3258: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:build/libtool.m4:3258: -1- AC_DEFUN([AC_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:build/libtool.m4:3267: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM="-lm")
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:build/libtool.m4:3286: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:build/libtool.m4:3286: -1- AC_DEFUN([AC_CHECK_LIBM], [AC_DIAGNOSE([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:build/libtool.m4:6987: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test "x${GCJFLAGS+set}" = xset || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:build/libtool.m4:6996: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:build/libtool.m4:6996: -1- AC_DEFUN([LT_AC_PROG_GCJ], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:build/libtool.m4:7003: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:build/libtool.m4:7008: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:build/libtool.m4:7008: -1- AC_DEFUN([LT_AC_PROG_RC], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:build/libtool.m4:7119: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:build/libtool.m4:7119: -1- AC_DEFUN([LT_AC_PROG_SED], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:build/ltoptions.m4:13: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:build/ltoptions.m4:110: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:110: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:145: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:145: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:194: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:build/ltoptions.m4:198: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:build/ltoptions.m4:202: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:build/ltoptions.m4:202: -1- AC_DEFUN([AM_ENABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:build/ltoptions.m4:203: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:build/ltoptions.m4:203: -1- AC_DEFUN([AM_DISABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:build/ltoptions.m4:248: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:build/ltoptions.m4:252: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:build/ltoptions.m4:256: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:build/ltoptions.m4:256: -1- AC_DEFUN([AM_ENABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:build/ltoptions.m4:257: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:build/ltoptions.m4:257: -1- AC_DEFUN([AM_DISABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:build/ltoptions.m4:302: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:302: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:309: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:309: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:342: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])
m4trace:build/ltoptions.m4:342: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])
m4trace:build/ltsugar.m4:13: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:build/ltversion.m4:18: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.2.6b'
macro_revision='1.3017'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:build/lt~obsolete.m4:36: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:build/lt~obsolete.m4:40: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:build/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:build/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:build/lt~obsolete.m4:44: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:build/lt~obsolete.m4:45: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:build/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:build/lt~obsolete.m4:47: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:build/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:build/lt~obsolete.m4:49: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:build/lt~obsolete.m4:50: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:build/lt~obsolete.m4:51: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:build/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:build/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:build/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:build/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:build/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:build/lt~obsolete.m4:57: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:build/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:build/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:build/lt~obsolete.m4:60: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:build/lt~obsolete.m4:61: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:build/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:build/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:build/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:build/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:build/lt~obsolete.m4:66: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:build/lt~obsolete.m4:71: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:build/lt~obsolete.m4:72: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:build/lt~obsolete.m4:73: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:build/lt~obsolete.m4:74: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:build/lt~obsolete.m4:75: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:build/lt~obsolete.m4:77: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:build/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:build/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:build/lt~obsolete.m4:80: -1- AC_DEFUN([AC_LIBTOOL_RC])
m4trace:build/lt~obsolete.m4:81: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:build/lt~obsolete.m4:82: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:build/lt~obsolete.m4:83: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:build/lt~obsolete.m4:84: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:build/lt~obsolete.m4:85: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:build/lt~obsolete.m4:86: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:build/lt~obsolete.m4:87: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:build/lt~obsolete.m4:88: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:build/lt~obsolete.m4:89: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:build/lt~obsolete.m4:90: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:build/lt~obsolete.m4:91: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:build/lt~obsolete.m4:92: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:acinclude.m4:39: -4- m4_include([cairo-version.h])
m4trace:acinclude.m4:47: -1- m4_pattern_forbid([^cr_])
m4trace:acinclude.m4:53: -1- m4_pattern_forbid([CAIRO])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:3: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:3: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:10: -1- AM_INIT_AUTOMAKE([1.9.6 gnu -Wall no-define])
m4trace:configure.ac:10: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:10: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:10: -1- AM_AUTOMAKE_VERSION([1.11.1])
m4trace:configure.ac:10: -1- _AM_AUTOCONF_VERSION([2.65])
m4trace:configure.ac:10: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:10: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:10: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:10: -1- _AM_SET_OPTIONS([1.9.6 gnu -Wall no-define])
m4trace:configure.ac:10: -1- _AM_SET_OPTION([1.9.6])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([1.9.6])
m4trace:configure.ac:10: -1- _AM_SET_OPTION([gnu])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([gnu])
m4trace:configure.ac:10: -1- _AM_SET_OPTION([-Wall])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([-Wall])
m4trace:configure.ac:10: -1- _AM_SET_OPTION([no-define])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:10: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:10: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:10: -1- AM_SANITY_CHECK
m4trace:configure.ac:10: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:10: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:10: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:10: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:10: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:10: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:10: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:10: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:10: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:10: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:10: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:10: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:10: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:10: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:10: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:10: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:10: -1- AM_PROG_MKDIR_P
m4trace:configure.ac:10: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:10: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:10: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:10: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:10: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:10: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:10: -1- AM_MISSING_PROG([AMTAR], [tar])
m4trace:configure.ac:10: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:10: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:10: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:10: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:10: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:11: -1- AC_LIBTOOL_WIN32_DLL
m4trace:configure.ac:11: -1- _m4_warn([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.], [build/ltoptions.m4:145: AC_LIBTOOL_WIN32_DLL is expanded from...
configure.ac:11: the top level])
m4trace:configure.ac:11: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^AS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:11: -1- _m4_warn([obsolete], [AC_LIBTOOL_WIN32_DLL: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.], [build/ltoptions.m4:145: AC_LIBTOOL_WIN32_DLL is expanded from...
configure.ac:11: the top level])
m4trace:configure.ac:12: -1- AC_PROG_LIBTOOL
m4trace:configure.ac:12: -1- _m4_warn([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.], [build/libtool.m4:102: AC_PROG_LIBTOOL is expanded from...
configure.ac:12: the top level])
m4trace:configure.ac:12: -1- LT_INIT
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:12: -1- LTOPTIONS_VERSION
m4trace:configure.ac:12: -1- LTSUGAR_VERSION
m4trace:configure.ac:12: -1- LTVERSION_VERSION
m4trace:configure.ac:12: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:12: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:12: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:12: -1- AM_SET_DEPDIR
m4trace:configure.ac:12: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:12: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:12: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:12: -1- AM_DEP_TRACK
m4trace:configure.ac:12: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:12: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:12: -1- LT_PATH_LD
m4trace:configure.ac:12: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:12: -1- AC_PROG_EGREP
m4trace:configure.ac:12: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:12: -1- LT_PATH_NM
m4trace:configure.ac:12: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:12: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:12: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:12: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^lt_ECHO$])
m4trace:configure.ac:12: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:12: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:12: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:12: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:12: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:12: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:12: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:12: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:12: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:12: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:12: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:13: -1- DOLT
m4trace:configure.ac:13: -1- m4_pattern_allow([^DOLT_BASH$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^LTCOMPILE$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^LTCXXCOMPILE$])
m4trace:configure.ac:14: -1- GTK_DOC_CHECK([1.6])
m4trace:configure.ac:14: -1- m4_pattern_allow([^HTML_DIR$])
m4trace:configure.ac:14: -1- PKG_CHECK_EXISTS([gtk-doc >= 1.6], [], [as_fn_error "You need to have gtk-doc >= 1.6 installed to build gtk-doc" "$LINENO" 5])
m4trace:configure.ac:14: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:14: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^GTKDOC_CHECK$])
m4trace:configure.ac:14: -1- AM_CONDITIONAL([ENABLE_GTK_DOC], [test x$enable_gtk_doc = xyes])
m4trace:configure.ac:14: -1- m4_pattern_allow([^ENABLE_GTK_DOC_TRUE$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^ENABLE_GTK_DOC_FALSE$])
m4trace:configure.ac:14: -1- _AM_SUBST_NOTMAKE([ENABLE_GTK_DOC_TRUE])
m4trace:configure.ac:14: -1- _AM_SUBST_NOTMAKE([ENABLE_GTK_DOC_FALSE])
m4trace:configure.ac:14: -1- AM_CONDITIONAL([GTK_DOC_USE_LIBTOOL], [test -n "$LIBTOOL"])
m4trace:configure.ac:14: -1- m4_pattern_allow([^GTK_DOC_USE_LIBTOOL_TRUE$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^GTK_DOC_USE_LIBTOOL_FALSE$])
m4trace:configure.ac:14: -1- _AM_SUBST_NOTMAKE([GTK_DOC_USE_LIBTOOL_TRUE])
m4trace:configure.ac:14: -1- _AM_SUBST_NOTMAKE([GTK_DOC_USE_LIBTOOL_FALSE])
m4trace:configure.ac:20: -1- m4_include([build/configure.ac.version])
m4trace:build/configure.ac.version:37: -1- m4_pattern_allow([^CAIRO_VERSION_MAJOR$])
m4trace:build/configure.ac.version:38: -1- m4_pattern_allow([^CAIRO_VERSION_MINOR$])
m4trace:build/configure.ac.version:39: -1- m4_pattern_allow([^CAIRO_VERSION_MICRO$])
m4trace:build/configure.ac.version:40: -1- m4_pattern_allow([^CAIRO_VERSION_SONUM$])
m4trace:build/configure.ac.version:41: -1- m4_pattern_allow([^CAIRO_RELEASE_STATUS$])
m4trace:build/configure.ac.version:42: -1- m4_pattern_allow([^CAIRO_LIBTOOL_VERSION_INFO$])
m4trace:build/configure.ac.version:47: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:build/configure.ac.version:48: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:build/configure.ac.version:49: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:build/configure.ac.version:50: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:21: -1- m4_include([build/configure.ac.tools])
m4trace:build/configure.ac.tools:2: -1- m4_pattern_allow([^FIND$])
m4trace:build/configure.ac.tools:3: -1- m4_pattern_allow([^XARGS$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CC$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CFLAGS$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^LIBS$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CC$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CC$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CC$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CC$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:build/configure.ac.tools:5: -1- _AM_DEPENDENCIES([CC])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:build/configure.ac.tools:5: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:build/configure.ac.tools:5: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:build/configure.ac.tools:5: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:build/configure.ac.tools:5: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:build/configure.ac.tools:6: -1- m4_pattern_allow([^CPP$])
m4trace:build/configure.ac.tools:6: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:build/configure.ac.tools:6: -1- m4_pattern_allow([^CPP$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXX$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^LIBS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXX$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:build/configure.ac.tools:7: -1- _AM_DEPENDENCIES([CXX])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:build/configure.ac.tools:7: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:build/configure.ac.tools:7: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:build/configure.ac.tools:7: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:build/configure.ac.tools:7: -1- LT_LANG([CXX])
m4trace:build/configure.ac.tools:7: -1- LT_SUPPORTED_TAG([CXX])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXX$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^LIBS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXX$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:build/configure.ac.tools:7: -1- _AM_DEPENDENCIES([CXX])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:build/configure.ac.tools:7: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:build/configure.ac.tools:7: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:build/configure.ac.tools:7: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:build/configure.ac.tools:7: -1- LT_LANG([CXX])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXXCPP$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^CXXCPP$])
m4trace:build/configure.ac.tools:7: -1- _LT_COMPILER_BOILERPLATE
m4trace:build/configure.ac.tools:7: -1- _LT_LINKER_BOILERPLATE
m4trace:build/configure.ac.tools:7: -1- _LT_CC_BASENAME([$compiler])
m4trace:build/configure.ac.tools:7: -1- LT_PATH_LD
m4trace:build/configure.ac.tools:7: -1- m4_pattern_allow([^LD$])
m4trace:build/configure.ac.tools:7: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, CXX) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)], [$_LT_TAGVAR(lt_prog_compiler_pic, CXX)@&t@m4_if([CXX],[],[ -DPIC],[m4_if([CXX],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, CXX) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, CXX)=" $_LT_TAGVAR(lt_prog_compiler_pic, CXX)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, CXX)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, CXX)=no])
m4trace:build/configure.ac.tools:7: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_CXX], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, CXX)=])
m4trace:build/configure.ac.tools:8: -1- AM_PROG_CC_C_O
m4trace:build/configure.ac.tools:8: -1- m4_pattern_allow([^NO_MINUS_C_MINUS_O$])
m4trace:build/configure.ac.tools:13: -1- PKG_PROG_PKG_CONFIG([])
m4trace:build/configure.ac.tools:13: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:build/configure.ac.tools:13: -1- m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
m4trace:build/configure.ac.tools:13: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:build/configure.ac.tools:13: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:build/configure.ac.tools:24: -1- m4_pattern_allow([^PKGCONFIG_REQUIRES$])
m4trace:configure.ac:22: -1- m4_include([build/configure.ac.system])
m4trace:build/configure.ac.system:9: -1- AM_CONDITIONAL([CROSS_COMPILING], [test "x$cross_compiling" = "xyes"])
m4trace:build/configure.ac.system:9: -1- m4_pattern_allow([^CROSS_COMPILING_TRUE$])
m4trace:build/configure.ac.system:9: -1- m4_pattern_allow([^CROSS_COMPILING_FALSE$])
m4trace:build/configure.ac.system:9: -1- _AM_SUBST_NOTMAKE([CROSS_COMPILING_TRUE])
m4trace:build/configure.ac.system:9: -1- _AM_SUBST_NOTMAKE([CROSS_COMPILING_FALSE])
m4trace:build/configure.ac.system:10: -1- CAIRO_BIGENDIAN
m4trace:build/configure.ac.system:10: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:build/configure.ac.system:10: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:build/configure.ac.system:10: -1- AX_C_FLOAT_WORDS_BIGENDIAN
m4trace:build/configure.ac.system:10: -1- m4_pattern_allow([^FLOAT_WORDS_BIGENDIAN$])
m4trace:build/configure.ac.system:11: -1- CAIRO_CHECK_NATIVE_ATOMIC_PRIMITIVES
m4trace:build/configure.ac.system:11: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2654: AC_TRY_LINK is expanded from...
../../lib/m4sugar/m4sh.m4:598: AS_IF is expanded from...
../../lib/autoconf/general.m4:1998: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2019: AC_CACHE_CHECK is expanded from...
build/aclocal.cairo.m4:118: CAIRO_CHECK_NATIVE_ATOMIC_PRIMITIVES is expanded from...
build/configure.ac.system:11: the top level])
m4trace:build/configure.ac.system:11: -1- m4_pattern_allow([^HAVE_INTEL_ATOMIC_PRIMITIVES$])
m4trace:build/configure.ac.system:12: -1- CAIRO_CHECK_ATOMIC_OP_NEEDS_MEMORY_BARRIER
m4trace:build/configure.ac.system:12: -1- m4_pattern_allow([^ATOMIC_OP_NEEDS_MEMORY_BARRIER$])
m4trace:build/configure.ac.system:24: -1- AM_CONDITIONAL([OS_WIN32], [test "$cairo_os_win32" = "yes"])
m4trace:build/configure.ac.system:24: -1- m4_pattern_allow([^OS_WIN32_TRUE$])
m4trace:build/configure.ac.system:24: -1- m4_pattern_allow([^OS_WIN32_FALSE$])
m4trace:build/configure.ac.system:24: -1- _AM_SUBST_NOTMAKE([OS_WIN32_TRUE])
m4trace:build/configure.ac.system:24: -1- _AM_SUBST_NOTMAKE([OS_WIN32_FALSE])
m4trace:build/configure.ac.system:42: -1- AC_CHECK_LIBM
m4trace:build/configure.ac.system:42: -1- _m4_warn([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.], [build/libtool.m4:3286: AC_CHECK_LIBM is expanded from...
build/configure.ac.system:42: the top level])
m4trace:build/configure.ac.system:42: -1- LT_LIB_M
m4trace:build/configure.ac.system:42: -1- m4_pattern_allow([^LIBM$])
m4trace:build/configure.ac.system:47: -1- m4_pattern_allow([^CAIROPERF_LIBS$])
m4trace:build/configure.ac.system:55: -1- m4_pattern_allow([^HAVE_UINT64_T$])
m4trace:build/configure.ac.system:55: -1- m4_pattern_allow([^HAVE_UINT128_T$])
m4trace:build/configure.ac.system:61: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:build/configure.ac.system:61: -1- m4_pattern_allow([^HAVE_SCHED_GETAFFINITY$])
m4trace:build/configure.ac.system:73: -1- m4_pattern_allow([^HAVE_WINDOWS_H$])
m4trace:configure.ac:23: -1- m4_include([build/configure.ac.features])
m4trace:build/configure.ac.features:23: -1- AC_DEFUN([CAIRO_ENABLE], [_CAIRO_ENABLE([$1],	[$2],			,		[$3],[$4])])
m4trace:build/configure.ac.features:26: -1- AC_DEFUN([CAIRO_ENABLE_SURFACE_BACKEND], [_CAIRO_ENABLE([$1],	[$2 surface backend],	surface,	[$3],[$4])])
m4trace:build/configure.ac.features:29: -1- AC_DEFUN([CAIRO_ENABLE_FONT_BACKEND], [_CAIRO_ENABLE([$1],	[$2 font backend],	font,	  	[$3],[$4])])
m4trace:build/configure.ac.features:32: -1- AC_DEFUN([CAIRO_ENABLE_FUNCTIONS], [_CAIRO_ENABLE([$1],	[$2 functions],		functions,	[$3],[$4])])
m4trace:build/configure.ac.features:59: -1- CAIRO_INIT_MAKEFILES([build])
m4trace:build/configure.ac.features:59: -1- m4_pattern_allow([^CAIRO_HAS_])
m4trace:build/configure.ac.features:59: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [!always], [*], [dnl
		AM_CONDITIONAL(cr_feature_tag, [test "x$use_]cr_feature[" = xyes])dnl
	])
m4trace:build/configure.ac.features:59: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([_], [build], [], [[# Generated by configure.  Modify to customize.]])
m4trace:build/configure.ac.features:59: -1- CAIRO_ACCUMULATORS_REGISTER([MAKEFILE___WIN32], [
], [# Generated by configure.  Modify to customize.
])
m4trace:build/configure.ac.features:59: -1- m4_pattern_allow([CAIRO_MAKEFILE___WIN32])
m4trace:build/configure.ac.features:59: -1- CAIRO_CONFIG_COMMANDS([$srcdir/build/Makefile.win32.features], [echo "$CAIRO_MAKEFILE___WIN32"], [CAIRO_MAKEFILE___WIN32='$CAIRO_MAKEFILE___WIN32'])
m4trace:build/configure.ac.features:59: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([_], [*], [!always], [*], [cr_feature_tag=m4_if(cr_feature_default,[yes],1,[m4_bmatch(cr_feature,[win32],1,0)])])
m4trace:build/configure.ac.features:59: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [!always], [*], [dnl
		m4_foreach_w([cr_makefile], m4_if([_],[*],_CAIRO_MAKEFILES,[_]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]1([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:60: -1- CAIRO_CONFIG_MAKEFILE([cairo], [src])
m4trace:build/configure.ac.features:60: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE([cairo], [src], [], [])
m4trace:build/configure.ac.features:60: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE_AMAKE([cairo], [src], [], [])
m4trace:build/configure.ac.features:60: -1- CAIRO_ACCUMULATORS_REGISTER([MAKEFILE_cairo_AMAKE], [
], [# Generated by configure.  Do not edit.
])
m4trace:build/configure.ac.features:60: -1- m4_pattern_allow([CAIRO_MAKEFILE_cairo_AMAKE])
m4trace:build/configure.ac.features:60: -1- CAIRO_CONFIG_COMMANDS([$srcdir/src/Makefile.am.features], [echo "$CAIRO_MAKEFILE_cairo_AMAKE"], [CAIRO_MAKEFILE_cairo_AMAKE='$CAIRO_MAKEFILE_cairo_AMAKE'])
m4trace:build/configure.ac.features:60: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([cairo], [src], [], [])
m4trace:build/configure.ac.features:60: -1- CAIRO_ACCUMULATORS_REGISTER([MAKEFILE_cairo_WIN32], [
], [# Generated by configure.  Do not edit.
])
m4trace:build/configure.ac.features:60: -1- m4_pattern_allow([CAIRO_MAKEFILE_cairo_WIN32])
m4trace:build/configure.ac.features:60: -1- CAIRO_CONFIG_COMMANDS([$srcdir/src/Makefile.win32.features], [echo "$CAIRO_MAKEFILE_cairo_WIN32"], [CAIRO_MAKEFILE_cairo_WIN32='$CAIRO_MAKEFILE_cairo_WIN32'])
m4trace:build/configure.ac.features:61: -1- CAIRO_CONFIG_MAKEFILE([cairo_boilerplate], [boilerplate])
m4trace:build/configure.ac.features:61: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE([cairo_boilerplate], [boilerplate], [], [])
m4trace:build/configure.ac.features:61: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE_AMAKE([cairo_boilerplate], [boilerplate], [], [])
m4trace:build/configure.ac.features:61: -1- CAIRO_ACCUMULATORS_REGISTER([MAKEFILE_cairo_boilerplate_AMAKE], [
], [# Generated by configure.  Do not edit.
])
m4trace:build/configure.ac.features:61: -1- m4_pattern_allow([CAIRO_MAKEFILE_cairo_boilerplate_AMAKE])
m4trace:build/configure.ac.features:61: -1- CAIRO_CONFIG_COMMANDS([$srcdir/boilerplate/Makefile.am.features], [echo "$CAIRO_MAKEFILE_cairo_boilerplate_AMAKE"], [CAIRO_MAKEFILE_cairo_boilerplate_AMAKE='$CAIRO_MAKEFILE_cairo_boilerplate_AMAKE'])
m4trace:build/configure.ac.features:61: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([cairo_boilerplate], [boilerplate], [], [])
m4trace:build/configure.ac.features:61: -1- CAIRO_ACCUMULATORS_REGISTER([MAKEFILE_cairo_boilerplate_WIN32], [
], [# Generated by configure.  Do not edit.
])
m4trace:build/configure.ac.features:61: -1- m4_pattern_allow([CAIRO_MAKEFILE_cairo_boilerplate_WIN32])
m4trace:build/configure.ac.features:61: -1- CAIRO_CONFIG_COMMANDS([$srcdir/boilerplate/Makefile.win32.features], [echo "$CAIRO_MAKEFILE_cairo_boilerplate_WIN32"], [CAIRO_MAKEFILE_cairo_boilerplate_WIN32='$CAIRO_MAKEFILE_cairo_boilerplate_WIN32'])
m4trace:build/configure.ac.features:62: -1- CAIRO_MAKEFILE_INCLUDE([*], [Makefile.sources])
m4trace:build/configure.ac.features:62: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [include $(top_srcdir)/cr_make_cairo_dir_amake/Makefile.sources
])
m4trace:build/configure.ac.features:62: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(top_srcdir),)
include Makefile.sources
else
include $(top_srcdir)/cr_make_cairo_dir_win32/Makefile.sources
endif
])
m4trace:build/configure.ac.features:62: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [include $(top_srcdir)/cr_make_cairo_boilerplate_dir_amake/Makefile.sources
])
m4trace:build/configure.ac.features:62: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(top_srcdir),)
include Makefile.sources
else
include $(top_srcdir)/cr_make_cairo_boilerplate_dir_win32/Makefile.sources
endif
])
m4trace:build/configure.ac.features:64: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [*], [*], [*], [])
m4trace:build/configure.ac.features:64: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [*], [*], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]2([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:68: -1- CAIRO_MAKEFILE_ACCUMULATE([*], [supported_$1_headers = $($1_headers)])
m4trace:build/configure.ac.features:68: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:68: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:68: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:68: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:71: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [*], [!no], [!], [supported_$1_headers += $($1_$2_headers)])
m4trace:build/configure.ac.features:71: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [!no], [!], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]3([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:76: -1- CAIRO_MAKEFILE_ACCUMULATE([*], [unsupported_$1_headers =])
m4trace:build/configure.ac.features:76: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:76: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:76: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:76: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:79: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [*], [no], [!], [unsupported_$1_headers += $($1_$2_headers)])
m4trace:build/configure.ac.features:79: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [no], [!], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]4([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:84: -1- CAIRO_MAKEFILE_ACCUMULATE([*], [dnl
all_$1_files = $(all_$1_headers) $(all_$1_private) $(all_$1_sources)
all_$1_headers = $($1_headers)
all_$1_private = $($1_private)
all_$1_sources = $($1_sources)
])
m4trace:build/configure.ac.features:84: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:84: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:84: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:84: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:91: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [*], [*], [!], [dnl
all_$1_headers += $($1_$2_headers)
all_$1_private += $($1_$2_private)
all_$1_sources += $($1_$2_sources)])
m4trace:build/configure.ac.features:91: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [*], [!], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]5([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:99: -1- CAIRO_MAKEFILE_ACCUMULATE([*], [dnl
enabled_$1_files = $(enabled_$1_headers) $(enabled_$1_private) $(enabled_$1_sources)
enabled_$1_headers = $($1_headers)
enabled_$1_private = $($1_private)
enabled_$1_sources = $($1_sources)
])
m4trace:build/configure.ac.features:99: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:99: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:99: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:99: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:106: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [yes], [*], [!], [dnl
enabled_$1_headers += $($1_$2_headers)
enabled_$1_private += $($1_$2_private)
enabled_$1_sources += $($1_$2_sources)])
m4trace:build/configure.ac.features:106: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [*], [!], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]6([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[yes],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[yes],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:116: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [*], [*], [], [dnl
all_$1_private += $($1_$2_private) $($1_$2_headers)
all_$1_sources += $($1_$2_sources)])
m4trace:build/configure.ac.features:116: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [*], [], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]7([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:123: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([*], [yes], [*], [], [dnl
enabled_$1_private += $($1_$2_private) $($1_$2_headers)
enabled_$1_sources += $($1_$2_sources)])
m4trace:build/configure.ac.features:123: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [*], [], [dnl
		m4_foreach_w([cr_makefile], m4_if([*],[*],_CAIRO_MAKEFILES,[*]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]8([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[yes],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[yes],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:140: -1- CAIRO_FEATURE_VARS_REGISTER([BASE], [cairo])
m4trace:build/configure.ac.features:141: -1- CAIRO_ACCUMULATED_FEATURE_VARS_REGISTER([REQUIRES], [], [ ])
m4trace:build/configure.ac.features:141: -1- CAIRO_FEATURE_VARS_REGISTER([REQUIRES], [])
m4trace:build/configure.ac.features:141: -1- CAIRO_ACCUMULATORS_REGISTER_UNQUOTED([REQUIRES], [ ], [])
m4trace:build/configure.ac.features:141: -1- m4_pattern_allow([CAIRO_REQUIRES])
m4trace:build/configure.ac.features:142: -1- CAIRO_ACCUMULATED_FEATURE_VARS_REGISTER([CFLAGS NONPKGCONFIG_CFLAGS], [], [ ])
m4trace:build/configure.ac.features:142: -1- CAIRO_FEATURE_VARS_REGISTER([CFLAGS NONPKGCONFIG_CFLAGS], [])
m4trace:build/configure.ac.features:142: -1- CAIRO_ACCUMULATORS_REGISTER_UNQUOTED([CFLAGS NONPKGCONFIG_CFLAGS], [ ], [])
m4trace:build/configure.ac.features:142: -1- m4_pattern_allow([CAIRO_CFLAGS])
m4trace:build/configure.ac.features:142: -1- m4_pattern_allow([CAIRO_NONPKGCONFIG_CFLAGS])
m4trace:build/configure.ac.features:143: -1- CAIRO_ACCUMULATED_FEATURE_VARS_REGISTER([LIBS NONPKGCONFIG_LIBS], [], [ ], [$LIBS])
m4trace:build/configure.ac.features:143: -1- CAIRO_FEATURE_VARS_REGISTER([LIBS NONPKGCONFIG_LIBS], [])
m4trace:build/configure.ac.features:143: -1- CAIRO_ACCUMULATORS_REGISTER_UNQUOTED([LIBS NONPKGCONFIG_LIBS], [ ], [$LIBS])
m4trace:build/configure.ac.features:143: -1- m4_pattern_allow([CAIRO_LIBS])
m4trace:build/configure.ac.features:143: -1- m4_pattern_allow([CAIRO_NONPKGCONFIG_LIBS])
m4trace:build/configure.ac.features:144: -1- m4_pattern_allow([^CAIRO_REQUIRES$])
m4trace:build/configure.ac.features:145: -1- m4_pattern_allow([^CAIRO_CFLAGS$])
m4trace:build/configure.ac.features:146: -1- m4_pattern_allow([^CAIRO_NONPKGCONFIG_CFLAGS$])
m4trace:build/configure.ac.features:147: -1- m4_pattern_allow([^CAIRO_LIBS$])
m4trace:build/configure.ac.features:148: -1- m4_pattern_allow([^CAIRO_NONPKGCONFIG_LIBS$])
m4trace:build/configure.ac.features:181: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [!always], [!], [dnl
	_CAIRO_FEATURE_CONFIG_PKGCONFIG_FILE(
		[$1],
		cr_feature_name,
		[src/]cr_feature_pc,
		[src/qcairo-features.pc.in]
	)dnl
])
m4trace:build/configure.ac.features:192: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [!always], [!], [dnl
	_CAIRO_FEATURE_CONFIG_PKGCONFIG_FILE(
		[$1],
		cr_feature_name,
		cr_feature_uninstalled_pc,
		[src/qcairo-features-uninstalled.pc.in]
	)dnl
])
m4trace:build/configure.ac.features:204: -1- CAIRO_MAKEFILE_ACCUMULATE([cairo], [all_$1_pkgconf = qcairo.pc])
m4trace:build/configure.ac.features:204: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:204: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:206: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([cairo], [*], [!always], [!], [all_$1_pkgconf += cr_feature_pc])
m4trace:build/configure.ac.features:206: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [!always], [!], [dnl
		m4_foreach_w([cr_makefile], m4_if([cairo],[*],_CAIRO_MAKEFILES,[cairo]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]9([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[*],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[*],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:210: -1- CAIRO_MAKEFILE_ACCUMULATE([cairo], [enabled_$1_pkgconf = qcairo.pc])
m4trace:build/configure.ac.features:210: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:build/configure.ac.features:210: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:212: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([cairo], [yes], [!always], [!], [enabled_$1_pkgconf += cr_feature_pc])
m4trace:build/configure.ac.features:212: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [!always], [!], [dnl
		m4_foreach_w([cr_makefile], m4_if([cairo],[*],_CAIRO_MAKEFILES,[cairo]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]10([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[yes],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[yes],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:223: -1- CAIRO_ACCUMULATORS_REGISTER([FEATURES], [ ])
m4trace:build/configure.ac.features:223: -1- m4_pattern_allow([CAIRO_FEATURES])
m4trace:build/configure.ac.features:224: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [*], [!], [dnl
	CAIRO_ACCUMULATE(FEATURES, cr_feature_tag)dnl
])
m4trace:build/configure.ac.features:229: -1- CAIRO_ACCUMULATORS_REGISTER([SUPPORTED_FEATURES], [ ])
m4trace:build/configure.ac.features:229: -1- m4_pattern_allow([CAIRO_SUPPORTED_FEATURES])
m4trace:build/configure.ac.features:230: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [!no], [!], [dnl
	CAIRO_ACCUMULATE(SUPPORTED_FEATURES, cr_feature_tag)
])
m4trace:build/configure.ac.features:235: -1- CAIRO_ACCUMULATORS_REGISTER([NO_FEATURES], [ ])
m4trace:build/configure.ac.features:235: -1- m4_pattern_allow([CAIRO_NO_FEATURES])
m4trace:build/configure.ac.features:236: -1- CAIRO_FEATURE_HOOK_REGISTER([no], [!no], [!], [dnl
	CAIRO_ACCUMULATE(NO_FEATURES, cr_feature_tag)
])
m4trace:build/configure.ac.features:242: -1- CAIRO_CONFIG_COMMANDS([src/cairo-features.h], [dnl
	echo '/* Generated by configure.  Do not edit. */'
	echo '#ifndef CAIRO_FEATURES_H'
	echo '#define CAIRO_FEATURES_H'
	echo ''
	for FEATURE in $CAIRO_FEATURES; do
		echo "#define $FEATURE 1"
	done | LANG=C sort
	echo ''
	for FEATURE in $CAIRO_NO_FEATURES; do
		echo "/*#undef $FEATURE */"
	done | LANG=C sort
	echo ''
	echo '#endif'
], [dnl
	CAIRO_FEATURES='$CAIRO_FEATURES'
	CAIRO_NO_FEATURES='$CAIRO_NO_FEATURES'
])
m4trace:build/configure.ac.features:262: -1- CAIRO_CONFIG_COMMANDS([$srcdir/src/cairo-supported-features.h], [dnl
	echo '/* Generated by configure.  Do not edit. */'
	echo '#ifndef CAIRO_SUPPORTED_FEATURES_H'
	echo '#define CAIRO_SUPPORTED_FEATURES_H'
	echo ''
	echo '/* This is a dummy header, to trick gtk-doc only */'
	echo ''
	for FEATURE in $CAIRO_SUPPORTED_FEATURES; do
		echo "#define $FEATURE 1"
	done
	echo ''
	echo '#endif'
], [dnl
	CAIRO_SUPPORTED_FEATURES='$CAIRO_SUPPORTED_FEATURES'
])
m4trace:build/configure.ac.features:280: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [*], [], [dnl
	AC_DEFINE(cr_feature_tag, 1, [Define to 1 to enable cairo's ]cr_feature_name[ feature])
])
m4trace:build/configure.ac.features:287: -1- CAIRO_CONFIG_MAKEFILE_PRIVATE_WIN32([win32_features_h], [build], [features-h])
m4trace:build/configure.ac.features:287: -1- CAIRO_ACCUMULATORS_REGISTER([MAKEFILE_win32_features_h_WIN32], [
], [# Generated by configure.  Do not edit.
])
m4trace:build/configure.ac.features:287: -1- m4_pattern_allow([CAIRO_MAKEFILE_win32_features_h_WIN32])
m4trace:build/configure.ac.features:287: -1- CAIRO_CONFIG_COMMANDS([$srcdir/build/Makefile.win32.features-h], [echo "$CAIRO_MAKEFILE_win32_features_h_WIN32"], [CAIRO_MAKEFILE_win32_features_h_WIN32='$CAIRO_MAKEFILE_win32_features_h_WIN32'])
m4trace:build/configure.ac.features:289: -1- CAIRO_MAKEFILE_ACCUMULATE([win32_features_h], [src/cairo-features.h: build/Makefile.win32.features
	@echo "Generating src/cairo-features.h"
	@echo "/* Generated by Makefile.win32.  Do not edit. */" > src/cairo-features.h
	@echo "[#]ifndef CAIRO_FEATURES_H" >> src/cairo-features.h
	@echo "[#]define CAIRO_FEATURES_H 1" >> src/cairo-features.h])
m4trace:build/configure.ac.features:289: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:build/configure.ac.features:300: -1- CAIRO_MAKEFILE_ACCUMULATE_FEATURE([win32_features_h], [yes], [*], [*], [	@echo "[#]define cr_feature_tag 1" >> src/cairo-features.h])
m4trace:build/configure.ac.features:300: -1- CAIRO_FEATURE_HOOK_REGISTER([*], [*], [*], [dnl
		m4_foreach_w([cr_makefile], m4_if([win32_features_h],[*],_CAIRO_MAKEFILES,[win32_features_h]),
		[dnl
			cr_make_tmp=_CAIRO_SH_ESCAPE(cr_make_acc_contents]11([cr_makefile,]$1,$2,$3,$4)[)
			m4_ifdef([cr_make_]cr_makefile[_dir_amake],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_AMAKE],
				[yes],
				[if ]cr_feature_tag, [else], [endif],
				[$cr_make_tmp])
			])dnl
			m4_ifdef([cr_make_]cr_makefile[_dir_win32],
			[_CAIRO_MAKEFILE_ACCUMULATE_FEATURE(
				[MAKEFILE_]cr_makefile[_WIN32],
				[yes],
				[ifeq ($(]cr_feature_tag[),1)], [else], [endif],
				[$cr_make_tmp])dnl
			])dnl
		])dnl
	])
m4trace:build/configure.ac.features:310: -1- CAIRO_ACCUMULATORS_REGISTER([WARNING_MESSAGE], [

])
m4trace:build/configure.ac.features:310: -1- m4_pattern_allow([CAIRO_WARNING_MESSAGE])
m4trace:build/configure.ac.features:313: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [no], [!], [dnl
	CAIRO_ACCUMULATE([WARNING_MESSAGE], CAIRO_TEXT_WRAP([The ]cr_feature_name[ feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to ]cr_feature_name[ specific API.], [--- ]))
])
m4trace:build/configure.ac.features:319: -1- CAIRO_FEATURE_HOOK_REGISTER([no], [yes], [*], [dnl
	CAIRO_ACCUMULATE([WARNING_MESSAGE], CAIRO_TEXT_WRAP([It is strictly recommended that you do NOT disable the ]cr_feature_name[ feature.], [+++ ]))
])
m4trace:build/configure.ac.features:326: -1- CAIRO_ACCUMULATORS_REGISTER([NATIVE_SURFACE_BACKENDS])
m4trace:build/configure.ac.features:326: -1- m4_pattern_allow([CAIRO_NATIVE_SURFACE_BACKENDS])
m4trace:build/configure.ac.features:327: -1- CAIRO_ACCUMULATORS_REGISTER([NATIVE_FONT_BACKENDS])
m4trace:build/configure.ac.features:327: -1- m4_pattern_allow([CAIRO_NATIVE_FONT_BACKENDS])
m4trace:build/configure.ac.features:328: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [auto], [surface], [dnl
	CAIRO_ACCUMULATE([NATIVE_SURFACE_BACKENDS], [$1])
])
m4trace:build/configure.ac.features:332: -1- CAIRO_FEATURE_HOOK_REGISTER([yes], [auto], [font], [dnl
	CAIRO_ACCUMULATE([NATIVE_FONT_BACKENDS], [$1])
])
m4trace:build/configure.ac.features:351: -1- AC_DEFUN([CAIRO_REPORT], [dnl
	if test -z "$CAIRO_NATIVE_FONT_BACKENDS"; then
	   AC_MSG_ERROR([Cairo requires at least one native font backend.  Please install FreeType and fontconfig and try again.])
	fi

	V="$CAIRO_VERSION_MAJOR.$CAIRO_VERSION_MINOR.$CAIRO_VERSION_MICRO"
	echo ""
	echo "cairo (version $V [[$CAIRO_RELEASE_STATUS]]) will be compiled with:"
	echo ""
	echo "The following surface backends:"
	echo "  Image:         yes (always builtin)"
	echo "  Xlib:          $use_xlib"
	echo "  Xlib Xrender:  $use_xlib_xrender"
	echo "  Quartz:        $use_quartz"
	echo "  Quartz-image:  $use_quartz_image"
	echo "  XCB:           $use_xcb"
	echo "  Win32:         $use_win32"
	echo "  OS2:           $use_os2"
	echo "  PostScript:    $use_ps"
	echo "  PDF:           $use_pdf"
	echo "  SVG:           $use_svg"
	echo "  glitz:         $use_glitz"
	echo "  BeOS:          $use_beos"
	echo "  DirectFB:      $use_directfb"
	echo ""
	echo "The following font backends:"
	echo "  User:          yes (always builtin)"
	echo "  FreeType:      $use_ft"
	echo "  Win32:         $use_win32_font"
	echo "  Quartz:        $use_quartz_font"
	echo ""
	echo "The following functions:"
	echo "  PNG functions: $use_png"
	echo ""
	echo "And the following internal features:"
	echo "  gcov support:  $use_gcov"
	echo "  test surfaces: $use_test_surfaces"
	echo "  ps testing:    $test_ps"
	echo "  pdf testing:   $test_pdf"
	echo "  svg testing:   $test_svg"
	if test x"$use_win32" = "xyes"; then
		echo "  win32 printing testing:    $test_win32_printing"
	fi
	echo "$CAIRO_WARNING_MESSAGE"
	echo ""
])
m4trace:configure.ac:24: -1- m4_include([build/configure.ac.warnings])
m4trace:build/configure.ac.warnings:29: -1- CAIRO_CC_TRY_FLAG([$W], [WARN_CFLAGS="$WARN_CFLAGS $W"])
m4trace:build/configure.ac.warnings:59: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2581: AC_TRY_COMPILE is expanded from...
../../lib/m4sugar/m4sh.m4:598: AS_IF is expanded from...
../../lib/autoconf/general.m4:1998: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2019: AC_CACHE_CHECK is expanded from...
build/configure.ac.warnings:59: the top level])
m4trace:build/configure.ac.warnings:67: -1- m4_pattern_allow([^WARN_UNUSED_RESULT$])
m4trace:build/configure.ac.warnings:71: -1- CAIRO_CC_TRY_LINK_FLAG([-Wl,--allow-shlib-undefined], [cairo_cv_test_undefined_ldflags="-Wl,--allow-shlib-undefined"])
m4trace:build/configure.ac.warnings:75: -1- m4_pattern_allow([^CAIRO_TEST_UNDEFINED_LDFLAGS$])
m4trace:configure.ac:25: -1- m4_include([build/configure.ac.analysis])
m4trace:build/configure.ac.analysis:18: -1- m4_pattern_allow([^SHTOOL$])
m4trace:build/configure.ac.analysis:29: -1- m4_pattern_allow([^LTP$])
m4trace:build/configure.ac.analysis:30: -1- m4_pattern_allow([^LTP_GENHTML$])
m4trace:build/configure.ac.analysis:62: -1- m4_pattern_allow([^HAVE_GCOV$])
m4trace:build/configure.ac.analysis:75: -1- CAIRO_CC_TRY_FLAG([--coverage], [CAIRO_CFLAGS="$CAIRO_CFLAGS -O0 --coverage"])
m4trace:build/configure.ac.analysis:77: -1- AM_CONDITIONAL([CAIRO_HAS_LCOV], [test "x$cairo_has_lcov" = "xyes"])
m4trace:build/configure.ac.analysis:77: -1- m4_pattern_allow([^CAIRO_HAS_LCOV_TRUE$])
m4trace:build/configure.ac.analysis:77: -1- m4_pattern_allow([^CAIRO_HAS_LCOV_FALSE$])
m4trace:build/configure.ac.analysis:77: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_LCOV_TRUE])
m4trace:build/configure.ac.analysis:77: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_LCOV_FALSE])
m4trace:build/configure.ac.analysis:81: -1- PKG_CHECK_MODULES([VALGRIND], [valgrind], [
	_save_CFLAGS="$CFLAGS"
	_save_CPPFLAGS="$CPPFLAGS"
	CFLAGS="$CFLAGS $VALGRIND_CFLAGS"
	CPPFLAGS="$CPPFLAGS $VALGRIND_CFLAGS"
	AC_CHECK_HEADER([valgrind.h], [AC_DEFINE([HAVE_VALGRIND], [1],
			[Define to 1 if you have Valgrind])])
	AC_CHECK_HEADER([lockdep.h], [AC_DEFINE([HAVE_LOCKDEP], [1],
			[Define to 1 if you have the Valgrind lockdep tool])])
	AC_CHECK_HEADER([memfault.h], [AC_DEFINE([HAVE_MEMFAULT], [1],
			[Define to 1 if you have the Valgrind memfault tool])])
	CAIRO_CFLAGS="$VALGRIND_CFLAGS $CAIRO_CFLAGS"
	CFLAGS="$_save_CFLAGS"
	CPPFLAGS="$_save_CPPFLAGS"
    ], [{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }])
m4trace:build/configure.ac.analysis:81: -1- m4_pattern_allow([^VALGRIND_CFLAGS$])
m4trace:build/configure.ac.analysis:81: -1- m4_pattern_allow([^VALGRIND_LIBS$])
m4trace:build/configure.ac.analysis:81: -1- PKG_CHECK_EXISTS([valgrind], [pkg_cv_[]VALGRIND_CFLAGS=`$PKG_CONFIG --[]cflags "valgrind" 2>/dev/null`], [pkg_failed=yes])
m4trace:build/configure.ac.analysis:81: -1- PKG_CHECK_EXISTS([valgrind], [pkg_cv_[]VALGRIND_LIBS=`$PKG_CONFIG --[]libs "valgrind" 2>/dev/null`], [pkg_failed=yes])
m4trace:build/configure.ac.analysis:81: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:build/configure.ac.analysis:81: -1- m4_pattern_allow([^HAVE_VALGRIND$])
m4trace:build/configure.ac.analysis:81: -1- m4_pattern_allow([^HAVE_LOCKDEP$])
m4trace:build/configure.ac.analysis:81: -1- m4_pattern_allow([^HAVE_MEMFAULT$])
m4trace:configure.ac:37: -1- CAIRO_ENABLE_SURFACE_BACKEND([xlib], [Xlib], [auto], [
  xlib_REQUIRES="x11"
  PKG_CHECK_MODULES(xlib, $xlib_REQUIRES, ,
		    [AC_MSG_RESULT(no)
		     xlib_REQUIRES=""
		     AC_PATH_XTRA
		     if test "x$no_x" = xyes; then
		       use_xlib="no (requires X development libraries)"
		     else
		       xlib_NONPKGCONFIG_LIBS="$X_PRE_LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"
		       xlib_NONPKGCONFIG_CFLAGS=$X_CFLAGS
		     fi])
])
m4trace:configure.ac:37: -1- _CAIRO_ENABLE([xlib], [Xlib surface backend], [surface], [auto], [
  xlib_REQUIRES="x11"
  PKG_CHECK_MODULES(xlib, $xlib_REQUIRES, ,
		    [AC_MSG_RESULT(no)
		     xlib_REQUIRES=""
		     AC_PATH_XTRA
		     if test "x$no_x" = xyes; then
		       use_xlib="no (requires X development libraries)"
		     else
		       xlib_NONPKGCONFIG_LIBS="$X_PRE_LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"
		       xlib_NONPKGCONFIG_CFLAGS=$X_CFLAGS
		     fi])
])
m4trace:configure.ac:37: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:37: -1- PKG_CHECK_MODULES([xlib], [$xlib_REQUIRES], [], [AC_MSG_RESULT(no)
		     xlib_REQUIRES=""
		     AC_PATH_XTRA
		     if test "x$no_x" = xyes; then
		       use_xlib="no (requires X development libraries)"
		     else
		       xlib_NONPKGCONFIG_LIBS="$X_PRE_LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"
		       xlib_NONPKGCONFIG_CFLAGS=$X_CFLAGS
		     fi])
m4trace:configure.ac:37: -1- m4_pattern_allow([^xlib_CFLAGS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^xlib_LIBS$])
m4trace:configure.ac:37: -1- PKG_CHECK_EXISTS([$xlib_REQUIRES], [pkg_cv_[]xlib_CFLAGS=`$PKG_CONFIG --[]cflags "$xlib_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:37: -1- PKG_CHECK_EXISTS([$xlib_REQUIRES], [pkg_cv_[]xlib_LIBS=`$PKG_CONFIG --[]libs "$xlib_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:37: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:37: -1- m4_pattern_allow([^XMKMF$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_DISPLAY_MISSING$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_CFLAGS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_PRE_LIBS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_LIBS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_EXTRA_LIBS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_DISPLAY_MISSING$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_CFLAGS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_PRE_LIBS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_LIBS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^X_EXTRA_LIBS$])
m4trace:configure.ac:37: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:37: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$xlib_REQUIRES])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$xlib_CFLAGS])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$xlib_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$xlib_LIBS])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$xlib_NONPKGCONFIG_LIBS])
m4trace:configure.ac:37: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:37: -1- AM_CONDITIONAL([CAIRO_HAS_XLIB_SURFACE], [test "x$use_xlib" = xyes])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CAIRO_HAS_XLIB_SURFACE_TRUE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CAIRO_HAS_XLIB_SURFACE_FALSE$])
m4trace:configure.ac:37: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_XLIB_SURFACE_TRUE])
m4trace:configure.ac:37: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_XLIB_SURFACE_FALSE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_XLIB_SURFACE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_XLIB_SURFACE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_XLIB_SURFACE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_XLIB_SURFACE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_XLIB_SURFACE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_XLIB_SURFACE])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:37: -1- CAIRO_ACCUMULATE([NATIVE_SURFACE_BACKENDS], [xlib])
m4trace:configure.ac:51: -1- CAIRO_ENABLE_SURFACE_BACKEND([xlib_xrender], [Xlib Xrender], [auto], [
  if test "x$use_xlib" != "xyes"; then
    use_xlib_xrender="no (requires --enable-xlib)"
  else
    dnl Check for Xrender header files if the Xrender package is not installed:
    xlib_xrender_BASE=cairo-xlib
    xlib_xrender_REQUIRES="xrender >= 0.6"
    PKG_CHECK_MODULES(xlib_xrender, $xlib_xrender_REQUIRES, ,
		      [AC_MSG_RESULT(no)
		       xlib_xrender_REQUIRES=""
		       old_CPPFLAGS=$CPPFLAGS
		       CPPFLAGS="$CPPFLAGS $xlib_CFLAGS $xlib_NONPKGCONFIG_CFLAGS"
		       AC_CHECK_HEADER(X11/extensions/Xrender.h,
				       [xlib_xrender_NONPKGCONFIG_LIBS="-lXrender"],
				       [use_xlib_xrender="no (requires $xlib_xrender_REQUIRES http://freedesktop.org/Software/xlibs)"])
		       CPPFLAGS=$old_CPPFLAGS
		      ])
  fi
])
m4trace:configure.ac:51: -1- _CAIRO_ENABLE([xlib_xrender], [Xlib Xrender surface backend], [surface], [auto], [
  if test "x$use_xlib" != "xyes"; then
    use_xlib_xrender="no (requires --enable-xlib)"
  else
    dnl Check for Xrender header files if the Xrender package is not installed:
    xlib_xrender_BASE=cairo-xlib
    xlib_xrender_REQUIRES="xrender >= 0.6"
    PKG_CHECK_MODULES(xlib_xrender, $xlib_xrender_REQUIRES, ,
		      [AC_MSG_RESULT(no)
		       xlib_xrender_REQUIRES=""
		       old_CPPFLAGS=$CPPFLAGS
		       CPPFLAGS="$CPPFLAGS $xlib_CFLAGS $xlib_NONPKGCONFIG_CFLAGS"
		       AC_CHECK_HEADER(X11/extensions/Xrender.h,
				       [xlib_xrender_NONPKGCONFIG_LIBS="-lXrender"],
				       [use_xlib_xrender="no (requires $xlib_xrender_REQUIRES http://freedesktop.org/Software/xlibs)"])
		       CPPFLAGS=$old_CPPFLAGS
		      ])
  fi
])
m4trace:configure.ac:51: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:51: -1- PKG_CHECK_MODULES([xlib_xrender], [$xlib_xrender_REQUIRES], [], [AC_MSG_RESULT(no)
		       xlib_xrender_REQUIRES=""
		       old_CPPFLAGS=$CPPFLAGS
		       CPPFLAGS="$CPPFLAGS $xlib_CFLAGS $xlib_NONPKGCONFIG_CFLAGS"
		       AC_CHECK_HEADER(X11/extensions/Xrender.h,
				       [xlib_xrender_NONPKGCONFIG_LIBS="-lXrender"],
				       [use_xlib_xrender="no (requires $xlib_xrender_REQUIRES http://freedesktop.org/Software/xlibs)"])
		       CPPFLAGS=$old_CPPFLAGS
		      ])
m4trace:configure.ac:51: -1- m4_pattern_allow([^xlib_xrender_CFLAGS$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^xlib_xrender_LIBS$])
m4trace:configure.ac:51: -1- PKG_CHECK_EXISTS([$xlib_xrender_REQUIRES], [pkg_cv_[]xlib_xrender_CFLAGS=`$PKG_CONFIG --[]cflags "$xlib_xrender_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:51: -1- PKG_CHECK_EXISTS([$xlib_xrender_REQUIRES], [pkg_cv_[]xlib_xrender_LIBS=`$PKG_CONFIG --[]libs "$xlib_xrender_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:51: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:51: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:51: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$xlib_xrender_REQUIRES])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$xlib_xrender_CFLAGS])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$xlib_xrender_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$xlib_xrender_LIBS])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$xlib_xrender_NONPKGCONFIG_LIBS])
m4trace:configure.ac:51: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:51: -1- AM_CONDITIONAL([CAIRO_HAS_XLIB_XRENDER_SURFACE], [test "x$use_xlib_xrender" = xyes])
m4trace:configure.ac:51: -1- m4_pattern_allow([^CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^CAIRO_HAS_XLIB_XRENDER_SURFACE_FALSE$])
m4trace:configure.ac:51: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE])
m4trace:configure.ac:51: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_XLIB_XRENDER_SURFACE_FALSE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_XLIB_XRENDER_SURFACE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_XLIB_XRENDER_SURFACE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_XLIB_XRENDER_SURFACE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_XLIB_XRENDER_SURFACE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_XLIB_XRENDER_SURFACE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_XLIB_XRENDER_SURFACE])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:51: -1- CAIRO_ACCUMULATE([NATIVE_SURFACE_BACKENDS], [xlib_xrender])
m4trace:configure.ac:73: -1- CAIRO_ENABLE_SURFACE_BACKEND([xcb], [XCB], [no], [
  xcb_REQUIRES="xcb >= 0.9.92 xcb-render >= 0.9.92 xcb-renderutil"
  PKG_CHECK_MODULES(xcb, $xcb_REQUIRES, , [AC_MSG_RESULT(no)
  use_xcb="no (requires $xcb_REQUIRES http://xcb.freedesktop.org)"])
])
m4trace:configure.ac:73: -1- _CAIRO_ENABLE([xcb], [XCB surface backend], [surface], [no], [
  xcb_REQUIRES="xcb >= 0.9.92 xcb-render >= 0.9.92 xcb-renderutil"
  PKG_CHECK_MODULES(xcb, $xcb_REQUIRES, , [AC_MSG_RESULT(no)
  use_xcb="no (requires $xcb_REQUIRES http://xcb.freedesktop.org)"])
])
m4trace:configure.ac:73: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:73: -1- PKG_CHECK_MODULES([xcb], [$xcb_REQUIRES], [], [AC_MSG_RESULT(no)
  use_xcb="no (requires $xcb_REQUIRES http://xcb.freedesktop.org)"])
m4trace:configure.ac:73: -1- m4_pattern_allow([^xcb_CFLAGS$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^xcb_LIBS$])
m4trace:configure.ac:73: -1- PKG_CHECK_EXISTS([$xcb_REQUIRES], [pkg_cv_[]xcb_CFLAGS=`$PKG_CONFIG --[]cflags "$xcb_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:73: -1- PKG_CHECK_EXISTS([$xcb_REQUIRES], [pkg_cv_[]xcb_LIBS=`$PKG_CONFIG --[]libs "$xcb_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:73: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:73: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:73: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$xcb_REQUIRES])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$xcb_CFLAGS])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$xcb_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$xcb_LIBS])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$xcb_NONPKGCONFIG_LIBS])
m4trace:configure.ac:73: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:73: -1- AM_CONDITIONAL([CAIRO_HAS_XCB_SURFACE], [test "x$use_xcb" = xyes])
m4trace:configure.ac:73: -1- m4_pattern_allow([^CAIRO_HAS_XCB_SURFACE_TRUE$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^CAIRO_HAS_XCB_SURFACE_FALSE$])
m4trace:configure.ac:73: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_XCB_SURFACE_TRUE])
m4trace:configure.ac:73: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_XCB_SURFACE_FALSE])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_XCB_SURFACE])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_XCB_SURFACE),1)])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_XCB_SURFACE])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_XCB_SURFACE),1)])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_XCB_SURFACE])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_XCB_SURFACE),1)])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_XCB_SURFACE])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_XCB_SURFACE),1)])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:73: -2- CAIRO_TEXT_WRAP([The XCB surface backend feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to XCB surface backend specific API.], [--- ])
m4trace:configure.ac:73: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [--- The XCB surface backend feature is still under active development and is
--- included in this release only as a preview. It does NOT fully work yet
--- and incompatible changes may yet be made to XCB surface backend specific
--- API.])
m4trace:configure.ac:81: -1- CAIRO_ENABLE_SURFACE_BACKEND([quartz], [Quartz], [auto], [
  dnl There is no pkgconfig for quartz; lets do a header check
  AC_CHECK_HEADER(ApplicationServices/ApplicationServices.h, , [use_quartz="no (requires ApplicationServices framework)"])
  if test "x$use_quartz" != "xyes" ; then
    dnl check for CoreGraphics as a separate framework
    AC_CHECK_HEADER(CoreGraphics/CoreGraphics.h, , [use_quartz="no (requires CoreGraphics framework)"])
    quartz_LIBS="-Xlinker -framework -Xlinker CoreGraphics"
  else
    quartz_LIBS="-Xlinker -framework -Xlinker ApplicationServices"
  fi
])
m4trace:configure.ac:81: -1- _CAIRO_ENABLE([quartz], [Quartz surface backend], [surface], [auto], [
  dnl There is no pkgconfig for quartz; lets do a header check
  AC_CHECK_HEADER(ApplicationServices/ApplicationServices.h, , [use_quartz="no (requires ApplicationServices framework)"])
  if test "x$use_quartz" != "xyes" ; then
    dnl check for CoreGraphics as a separate framework
    AC_CHECK_HEADER(CoreGraphics/CoreGraphics.h, , [use_quartz="no (requires CoreGraphics framework)"])
    quartz_LIBS="-Xlinker -framework -Xlinker CoreGraphics"
  else
    quartz_LIBS="-Xlinker -framework -Xlinker ApplicationServices"
  fi
])
m4trace:configure.ac:81: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:81: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:81: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$quartz_REQUIRES])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$quartz_CFLAGS])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$quartz_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$quartz_LIBS])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$quartz_NONPKGCONFIG_LIBS])
m4trace:configure.ac:81: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:81: -1- AM_CONDITIONAL([CAIRO_HAS_QUARTZ_SURFACE], [test "x$use_quartz" = xyes])
m4trace:configure.ac:81: -1- m4_pattern_allow([^CAIRO_HAS_QUARTZ_SURFACE_TRUE$])
m4trace:configure.ac:81: -1- m4_pattern_allow([^CAIRO_HAS_QUARTZ_SURFACE_FALSE$])
m4trace:configure.ac:81: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_QUARTZ_SURFACE_TRUE])
m4trace:configure.ac:81: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_QUARTZ_SURFACE_FALSE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_QUARTZ_SURFACE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_QUARTZ_SURFACE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_QUARTZ_SURFACE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_QUARTZ_SURFACE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_QUARTZ_SURFACE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_QUARTZ_SURFACE])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:81: -1- CAIRO_ACCUMULATE([NATIVE_SURFACE_BACKENDS], [quartz])
m4trace:configure.ac:93: -1- CAIRO_ENABLE_FONT_BACKEND([quartz_font], [Quartz], [auto], [
  use_quartz_font=$use_quartz
])
m4trace:configure.ac:93: -1- _CAIRO_ENABLE([quartz_font], [Quartz font backend], [font], [auto], [
  use_quartz_font=$use_quartz
])
m4trace:configure.ac:93: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:93: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:93: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$quartz_font_REQUIRES])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$quartz_font_CFLAGS])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$quartz_font_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$quartz_font_LIBS])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$quartz_font_NONPKGCONFIG_LIBS])
m4trace:configure.ac:93: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:93: -1- AM_CONDITIONAL([CAIRO_HAS_QUARTZ_FONT], [test "x$use_quartz_font" = xyes])
m4trace:configure.ac:93: -1- m4_pattern_allow([^CAIRO_HAS_QUARTZ_FONT_TRUE$])
m4trace:configure.ac:93: -1- m4_pattern_allow([^CAIRO_HAS_QUARTZ_FONT_FALSE$])
m4trace:configure.ac:93: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_QUARTZ_FONT_TRUE])
m4trace:configure.ac:93: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_QUARTZ_FONT_FALSE])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_QUARTZ_FONT])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_QUARTZ_FONT])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_QUARTZ_FONT])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_QUARTZ_FONT])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_QUARTZ_FONT])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_QUARTZ_FONT])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:93: -1- CAIRO_ACCUMULATE([NATIVE_FONT_BACKENDS], [quartz_font])
m4trace:configure.ac:97: -1- CAIRO_ENABLE_SURFACE_BACKEND([quartz_image], [Quartz Image], [no], [
  use_quartz_image=$use_quartz
])
m4trace:configure.ac:97: -1- _CAIRO_ENABLE([quartz_image], [Quartz Image surface backend], [surface], [no], [
  use_quartz_image=$use_quartz
])
m4trace:configure.ac:97: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:97: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:97: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$quartz_image_REQUIRES])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$quartz_image_CFLAGS])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$quartz_image_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$quartz_image_LIBS])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$quartz_image_NONPKGCONFIG_LIBS])
m4trace:configure.ac:97: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:97: -1- AM_CONDITIONAL([CAIRO_HAS_QUARTZ_IMAGE_SURFACE], [test "x$use_quartz_image" = xyes])
m4trace:configure.ac:97: -1- m4_pattern_allow([^CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE$])
m4trace:configure.ac:97: -1- m4_pattern_allow([^CAIRO_HAS_QUARTZ_IMAGE_SURFACE_FALSE$])
m4trace:configure.ac:97: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE])
m4trace:configure.ac:97: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_QUARTZ_IMAGE_SURFACE_FALSE])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_QUARTZ_IMAGE_SURFACE])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_QUARTZ_IMAGE_SURFACE])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_QUARTZ_IMAGE_SURFACE])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_QUARTZ_IMAGE_SURFACE])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:97: -2- CAIRO_TEXT_WRAP([The Quartz Image surface backend feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to Quartz Image surface backend specific API.], [--- ])
m4trace:configure.ac:97: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [--- The Quartz Image surface backend feature is still under active
--- development and is included in this release only as a preview. It does
--- NOT fully work yet and incompatible changes may yet be made to Quartz
--- Image surface backend specific API.])
m4trace:configure.ac:103: -1- CAIRO_ENABLE_SURFACE_BACKEND([win32], [Microsoft Windows], [auto], [
  if test "x$have_windows" != xyes; then
    use_win32="no (requires a Win32 platform)"
  fi
  win32_LIBS="-lgdi32 -lmsimg32"
])
m4trace:configure.ac:103: -1- _CAIRO_ENABLE([win32], [Microsoft Windows surface backend], [surface], [auto], [
  if test "x$have_windows" != xyes; then
    use_win32="no (requires a Win32 platform)"
  fi
  win32_LIBS="-lgdi32 -lmsimg32"
])
m4trace:configure.ac:103: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:103: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:103: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$win32_REQUIRES])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$win32_CFLAGS])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$win32_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$win32_LIBS])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$win32_NONPKGCONFIG_LIBS])
m4trace:configure.ac:103: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:103: -1- AM_CONDITIONAL([CAIRO_HAS_WIN32_SURFACE], [test "x$use_win32" = xyes])
m4trace:configure.ac:103: -1- m4_pattern_allow([^CAIRO_HAS_WIN32_SURFACE_TRUE$])
m4trace:configure.ac:103: -1- m4_pattern_allow([^CAIRO_HAS_WIN32_SURFACE_FALSE$])
m4trace:configure.ac:103: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_WIN32_SURFACE_TRUE])
m4trace:configure.ac:103: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_WIN32_SURFACE_FALSE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_WIN32_SURFACE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_WIN32_SURFACE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_WIN32_SURFACE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_WIN32_SURFACE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_WIN32_SURFACE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_WIN32_SURFACE])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:103: -1- CAIRO_ACCUMULATE([NATIVE_SURFACE_BACKENDS], [win32])
m4trace:configure.ac:110: -1- CAIRO_ENABLE_FONT_BACKEND([win32_font], [Microsoft Windows], [auto], [
  use_win32_font=$use_win32
])
m4trace:configure.ac:110: -1- _CAIRO_ENABLE([win32_font], [Microsoft Windows font backend], [font], [auto], [
  use_win32_font=$use_win32
])
m4trace:configure.ac:110: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:110: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:110: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$win32_font_REQUIRES])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$win32_font_CFLAGS])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$win32_font_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$win32_font_LIBS])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$win32_font_NONPKGCONFIG_LIBS])
m4trace:configure.ac:110: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:110: -1- AM_CONDITIONAL([CAIRO_HAS_WIN32_FONT], [test "x$use_win32_font" = xyes])
m4trace:configure.ac:110: -1- m4_pattern_allow([^CAIRO_HAS_WIN32_FONT_TRUE$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^CAIRO_HAS_WIN32_FONT_FALSE$])
m4trace:configure.ac:110: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_WIN32_FONT_TRUE])
m4trace:configure.ac:110: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_WIN32_FONT_FALSE])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_WIN32_FONT])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_WIN32_FONT),1)])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_WIN32_FONT])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_WIN32_FONT),1)])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_WIN32_FONT])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_WIN32_FONT),1)])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_WIN32_FONT])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_WIN32_FONT])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_WIN32_FONT])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_WIN32_FONT),1)])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:110: -1- CAIRO_ACCUMULATE([NATIVE_FONT_BACKENDS], [win32_font])
m4trace:configure.ac:116: -1- m4_pattern_allow([^GS$])
m4trace:configure.ac:118: -1- m4_pattern_allow([^CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE$])
m4trace:configure.ac:126: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE], [test "x$test_win32_printing" = "xyes"])
m4trace:configure.ac:126: -1- m4_pattern_allow([^CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_TRUE$])
m4trace:configure.ac:126: -1- m4_pattern_allow([^CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_FALSE$])
m4trace:configure.ac:126: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_TRUE])
m4trace:configure.ac:126: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_FALSE])
m4trace:configure.ac:130: -1- CAIRO_ENABLE_SURFACE_BACKEND([os2], [OS/2], [no], [
  case "$host" in
    *-*-os2*)
      :
      ;;
    *)
      use_os2="no (requires an OS/2 platform)"
      ;;
  esac
])
m4trace:configure.ac:130: -1- _CAIRO_ENABLE([os2], [OS/2 surface backend], [surface], [no], [
  case "$host" in
    *-*-os2*)
      :
      ;;
    *)
      use_os2="no (requires an OS/2 platform)"
      ;;
  esac
])
m4trace:configure.ac:130: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:130: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:130: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$os2_REQUIRES])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$os2_CFLAGS])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$os2_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$os2_LIBS])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$os2_NONPKGCONFIG_LIBS])
m4trace:configure.ac:130: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:130: -1- AM_CONDITIONAL([CAIRO_HAS_OS2_SURFACE], [test "x$use_os2" = xyes])
m4trace:configure.ac:130: -1- m4_pattern_allow([^CAIRO_HAS_OS2_SURFACE_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^CAIRO_HAS_OS2_SURFACE_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_OS2_SURFACE_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_OS2_SURFACE_FALSE])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_OS2_SURFACE])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_OS2_SURFACE),1)])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_OS2_SURFACE])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_OS2_SURFACE),1)])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_OS2_SURFACE])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_OS2_SURFACE),1)])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_OS2_SURFACE])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_OS2_SURFACE),1)])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:130: -2- CAIRO_TEXT_WRAP([The OS/2 surface backend feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to OS/2 surface backend specific API.], [--- ])
m4trace:configure.ac:130: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [--- The OS/2 surface backend feature is still under active development and is
--- included in this release only as a preview. It does NOT fully work yet
--- and incompatible changes may yet be made to OS/2 surface backend specific
--- API.])
m4trace:configure.ac:143: -1- CAIRO_ENABLE_SURFACE_BACKEND([beos], [BeOS/Zeta], [no], [
  case "$host" in
    *-*-beos)
      beos_LIBS=""
      dnl Add libbe and libzeta if available
      AC_CHECK_LIB(be,main,beos_LIBS="$beos_LIBS -lbe")
      AC_CHECK_LIB(zeta,main,beos_LIBS="$beos_LIBS -lzeta")
      ;;
    *)
      use_beos="no (requires a BeOS platform)"
      ;;
  esac
])
m4trace:configure.ac:143: -1- _CAIRO_ENABLE([beos], [BeOS/Zeta surface backend], [surface], [no], [
  case "$host" in
    *-*-beos)
      beos_LIBS=""
      dnl Add libbe and libzeta if available
      AC_CHECK_LIB(be,main,beos_LIBS="$beos_LIBS -lbe")
      AC_CHECK_LIB(zeta,main,beos_LIBS="$beos_LIBS -lzeta")
      ;;
    *)
      use_beos="no (requires a BeOS platform)"
      ;;
  esac
])
m4trace:configure.ac:143: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:143: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:143: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$beos_REQUIRES])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$beos_CFLAGS])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$beos_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$beos_LIBS])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$beos_NONPKGCONFIG_LIBS])
m4trace:configure.ac:143: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([CAIRO_HAS_BEOS_SURFACE], [test "x$use_beos" = xyes])
m4trace:configure.ac:143: -1- m4_pattern_allow([^CAIRO_HAS_BEOS_SURFACE_TRUE$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^CAIRO_HAS_BEOS_SURFACE_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_BEOS_SURFACE_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_BEOS_SURFACE_FALSE])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_BEOS_SURFACE])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_BEOS_SURFACE])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_BEOS_SURFACE])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_BEOS_SURFACE])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:143: -2- CAIRO_TEXT_WRAP([The BeOS/Zeta surface backend feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to BeOS/Zeta surface backend specific API.], [--- ])
m4trace:configure.ac:143: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [--- The BeOS/Zeta surface backend feature is still under active development
--- and is included in this release only as a preview. It does NOT fully work
--- yet and incompatible changes may yet be made to BeOS/Zeta surface backend
--- specific API.])
m4trace:configure.ac:159: -1- CAIRO_ENABLE_FUNCTIONS([png], [PNG], [yes], [
  use_png=no
  AC_ARG_VAR([png_REQUIRES], [module name for libpng to search for using pkg-config])
  if test "x$png_REQUIRES" = x; then
    # libpng13 is GnuWin32's libpng-1.2.8 :-(
    for l in libpng12 libpng13 libpng10 ; do
      if $PKG_CONFIG --exists $l ; then
        png_REQUIRES=$l
        use_png=yes
        break
      fi
    done
  else
    use_png=yes
  fi

  if test "x$use_png" = "xyes" ; then 
    PKG_CHECK_MODULES(png, $png_REQUIRES, , AC_MSG_RESULT(no))
  else
    AC_MSG_WARN([Could not find libpng in the pkg-config search path])
  fi    
])
m4trace:configure.ac:159: -1- _CAIRO_ENABLE([png], [PNG functions], [functions], [yes], [
  use_png=no
  AC_ARG_VAR([png_REQUIRES], [module name for libpng to search for using pkg-config])
  if test "x$png_REQUIRES" = x; then
    # libpng13 is GnuWin32's libpng-1.2.8 :-(
    for l in libpng12 libpng13 libpng10 ; do
      if $PKG_CONFIG --exists $l ; then
        png_REQUIRES=$l
        use_png=yes
        break
      fi
    done
  else
    use_png=yes
  fi

  if test "x$use_png" = "xyes" ; then 
    PKG_CHECK_MODULES(png, $png_REQUIRES, , AC_MSG_RESULT(no))
  else
    AC_MSG_WARN([Could not find libpng in the pkg-config search path])
  fi    
])
m4trace:configure.ac:159: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:159: -1- m4_pattern_allow([^png_REQUIRES$])
m4trace:configure.ac:159: -1- PKG_CHECK_MODULES([png], [$png_REQUIRES], [], [{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }])
m4trace:configure.ac:159: -1- m4_pattern_allow([^png_CFLAGS$])
m4trace:configure.ac:159: -1- m4_pattern_allow([^png_LIBS$])
m4trace:configure.ac:159: -1- PKG_CHECK_EXISTS([$png_REQUIRES], [pkg_cv_[]png_CFLAGS=`$PKG_CONFIG --[]cflags "$png_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:159: -1- PKG_CHECK_EXISTS([$png_REQUIRES], [pkg_cv_[]png_LIBS=`$PKG_CONFIG --[]libs "$png_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:159: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:159: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:159: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$png_REQUIRES])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$png_CFLAGS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$png_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$png_LIBS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$png_NONPKGCONFIG_LIBS])
m4trace:configure.ac:159: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:159: -1- AM_CONDITIONAL([CAIRO_HAS_PNG_FUNCTIONS], [test "x$use_png" = xyes])
m4trace:configure.ac:159: -1- m4_pattern_allow([^CAIRO_HAS_PNG_FUNCTIONS_TRUE$])
m4trace:configure.ac:159: -1- m4_pattern_allow([^CAIRO_HAS_PNG_FUNCTIONS_FALSE$])
m4trace:configure.ac:159: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_PNG_FUNCTIONS_TRUE])
m4trace:configure.ac:159: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_PNG_FUNCTIONS_FALSE])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_PNG_FUNCTIONS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_PNG_FUNCTIONS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_PNG_FUNCTIONS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_PNG_FUNCTIONS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_PNG_FUNCTIONS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_PNG_FUNCTIONS])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:159: -2- CAIRO_TEXT_WRAP([It is strictly recommended that you do NOT disable the PNG functions feature.], [+++ ])
m4trace:configure.ac:159: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [+++ It is strictly recommended that you do NOT disable the PNG functions
+++ feature.])
m4trace:configure.ac:185: -1- CAIRO_ENABLE_SURFACE_BACKEND([glitz], [glitz], [no], [
  glitz_REQUIRES="glitz >= $GLITZ_MIN_VERSION"
  PKG_CHECK_MODULES(glitz, $glitz_REQUIRES, , [AC_MSG_RESULT(no)
  use_glitz="no (requires $glitz_REQUIRES http://freedesktop.org/Software/glitz)"])
])
m4trace:configure.ac:185: -1- _CAIRO_ENABLE([glitz], [glitz surface backend], [surface], [no], [
  glitz_REQUIRES="glitz >= $GLITZ_MIN_VERSION"
  PKG_CHECK_MODULES(glitz, $glitz_REQUIRES, , [AC_MSG_RESULT(no)
  use_glitz="no (requires $glitz_REQUIRES http://freedesktop.org/Software/glitz)"])
])
m4trace:configure.ac:185: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:185: -1- PKG_CHECK_MODULES([glitz], [$glitz_REQUIRES], [], [AC_MSG_RESULT(no)
  use_glitz="no (requires $glitz_REQUIRES http://freedesktop.org/Software/glitz)"])
m4trace:configure.ac:185: -1- m4_pattern_allow([^glitz_CFLAGS$])
m4trace:configure.ac:185: -1- m4_pattern_allow([^glitz_LIBS$])
m4trace:configure.ac:185: -1- PKG_CHECK_EXISTS([$glitz_REQUIRES], [pkg_cv_[]glitz_CFLAGS=`$PKG_CONFIG --[]cflags "$glitz_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:185: -1- PKG_CHECK_EXISTS([$glitz_REQUIRES], [pkg_cv_[]glitz_LIBS=`$PKG_CONFIG --[]libs "$glitz_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:185: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:185: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:185: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$glitz_REQUIRES])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$glitz_CFLAGS])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$glitz_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$glitz_LIBS])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$glitz_NONPKGCONFIG_LIBS])
m4trace:configure.ac:185: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:185: -1- AM_CONDITIONAL([CAIRO_HAS_GLITZ_SURFACE], [test "x$use_glitz" = xyes])
m4trace:configure.ac:185: -1- m4_pattern_allow([^CAIRO_HAS_GLITZ_SURFACE_TRUE$])
m4trace:configure.ac:185: -1- m4_pattern_allow([^CAIRO_HAS_GLITZ_SURFACE_FALSE$])
m4trace:configure.ac:185: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_GLITZ_SURFACE_TRUE])
m4trace:configure.ac:185: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_GLITZ_SURFACE_FALSE])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_GLITZ_SURFACE])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_GLITZ_SURFACE])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_GLITZ_SURFACE])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_GLITZ_SURFACE])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_GLITZ_SURFACE),1)])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:185: -2- CAIRO_TEXT_WRAP([The glitz surface backend feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to glitz surface backend specific API.], [--- ])
m4trace:configure.ac:185: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [--- The glitz surface backend feature is still under active development and
--- is included in this release only as a preview. It does NOT fully work yet
--- and incompatible changes may yet be made to glitz surface backend
--- specific API.])
m4trace:configure.ac:192: -1- PKG_CHECK_MODULES([GLITZ_AGL], [glitz-agl >= $GLITZ_MIN_VERSION], [have_glitz_agl=yes], [have_glitz_agl=no; AC_MSG_RESULT(no)])
m4trace:configure.ac:192: -1- m4_pattern_allow([^GLITZ_AGL_CFLAGS$])
m4trace:configure.ac:192: -1- m4_pattern_allow([^GLITZ_AGL_LIBS$])
m4trace:configure.ac:192: -1- PKG_CHECK_EXISTS([glitz-agl >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_AGL_CFLAGS=`$PKG_CONFIG --[]cflags "glitz-agl >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:192: -1- PKG_CHECK_EXISTS([glitz-agl >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_AGL_LIBS=`$PKG_CONFIG --[]libs "glitz-agl >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:192: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:194: -1- PKG_CHECK_MODULES([GLITZ_EGL], [glitz-egl >= $GLITZ_MIN_VERSION], [have_glitz_egl=yes], [have_glitz_egl=no; AC_MSG_RESULT(no)])
m4trace:configure.ac:194: -1- m4_pattern_allow([^GLITZ_EGL_CFLAGS$])
m4trace:configure.ac:194: -1- m4_pattern_allow([^GLITZ_EGL_LIBS$])
m4trace:configure.ac:194: -1- PKG_CHECK_EXISTS([glitz-egl >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_EGL_CFLAGS=`$PKG_CONFIG --[]cflags "glitz-egl >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:194: -1- PKG_CHECK_EXISTS([glitz-egl >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_EGL_LIBS=`$PKG_CONFIG --[]libs "glitz-egl >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:194: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:196: -1- PKG_CHECK_MODULES([GLITZ_GLX], [glitz-glx >= $GLITZ_MIN_VERSION], [have_glitz_glx=yes], [have_glitz_glx=no; AC_MSG_RESULT(no)])
m4trace:configure.ac:196: -1- m4_pattern_allow([^GLITZ_GLX_CFLAGS$])
m4trace:configure.ac:196: -1- m4_pattern_allow([^GLITZ_GLX_LIBS$])
m4trace:configure.ac:196: -1- PKG_CHECK_EXISTS([glitz-glx >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_GLX_CFLAGS=`$PKG_CONFIG --[]cflags "glitz-glx >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:196: -1- PKG_CHECK_EXISTS([glitz-glx >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_GLX_LIBS=`$PKG_CONFIG --[]libs "glitz-glx >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:196: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:198: -1- PKG_CHECK_MODULES([GLITZ_WGL], [glitz-wgl >= $GLITZ_MIN_VERSION], [have_glitz_wgl=yes], [have_glitz_wgl=no; AC_MSG_RESULT(no)])
m4trace:configure.ac:198: -1- m4_pattern_allow([^GLITZ_WGL_CFLAGS$])
m4trace:configure.ac:198: -1- m4_pattern_allow([^GLITZ_WGL_LIBS$])
m4trace:configure.ac:198: -1- PKG_CHECK_EXISTS([glitz-wgl >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_WGL_CFLAGS=`$PKG_CONFIG --[]cflags "glitz-wgl >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:198: -1- PKG_CHECK_EXISTS([glitz-wgl >= $GLITZ_MIN_VERSION], [pkg_cv_[]GLITZ_WGL_LIBS=`$PKG_CONFIG --[]libs "glitz-wgl >= $GLITZ_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:198: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:202: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_AGL_SURFACE$])
m4trace:configure.ac:205: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_EGL_SURFACE$])
m4trace:configure.ac:208: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_GLX_SURFACE$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_WGL_SURFACE$])
m4trace:configure.ac:215: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_GLITZ_AGL_SURFACE], [test "x$have_glitz_agl" = "xyes"])
m4trace:configure.ac:215: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE$])
m4trace:configure.ac:215: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_FALSE$])
m4trace:configure.ac:215: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE])
m4trace:configure.ac:215: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_FALSE])
m4trace:configure.ac:216: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_GLITZ_EGL_SURFACE], [test "x$have_glitz_egl" = "xyes"])
m4trace:configure.ac:216: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE$])
m4trace:configure.ac:216: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_FALSE$])
m4trace:configure.ac:216: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE])
m4trace:configure.ac:216: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_FALSE])
m4trace:configure.ac:217: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_GLITZ_GLX_SURFACE], [test "x$have_glitz_glx" = "xyes"])
m4trace:configure.ac:217: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE$])
m4trace:configure.ac:217: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_FALSE$])
m4trace:configure.ac:217: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE])
m4trace:configure.ac:217: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_FALSE])
m4trace:configure.ac:218: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_GLITZ_WGL_SURFACE], [test "x$have_glitz_wgl" = "xyes"])
m4trace:configure.ac:218: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE$])
m4trace:configure.ac:218: -1- m4_pattern_allow([^CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_FALSE$])
m4trace:configure.ac:218: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE])
m4trace:configure.ac:218: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_FALSE])
m4trace:configure.ac:222: -1- CAIRO_ENABLE_SURFACE_BACKEND([directfb], [directfb], [no], [
  directfb_REQUIRES=directfb
  PKG_CHECK_MODULES(directfb, $directfb_REQUIRES, , AC_MSG_RESULT(no)
		    [use_directfb="no (requires $directfb_REQUIRES http://www.directfb.org)"])
])
m4trace:configure.ac:222: -1- _CAIRO_ENABLE([directfb], [directfb surface backend], [surface], [no], [
  directfb_REQUIRES=directfb
  PKG_CHECK_MODULES(directfb, $directfb_REQUIRES, , AC_MSG_RESULT(no)
		    [use_directfb="no (requires $directfb_REQUIRES http://www.directfb.org)"])
])
m4trace:configure.ac:222: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:222: -1- PKG_CHECK_MODULES([directfb], [$directfb_REQUIRES], [], [{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
		    use_directfb="no (requires $directfb_REQUIRES http://www.directfb.org)"])
m4trace:configure.ac:222: -1- m4_pattern_allow([^directfb_CFLAGS$])
m4trace:configure.ac:222: -1- m4_pattern_allow([^directfb_LIBS$])
m4trace:configure.ac:222: -1- PKG_CHECK_EXISTS([$directfb_REQUIRES], [pkg_cv_[]directfb_CFLAGS=`$PKG_CONFIG --[]cflags "$directfb_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:222: -1- PKG_CHECK_EXISTS([$directfb_REQUIRES], [pkg_cv_[]directfb_LIBS=`$PKG_CONFIG --[]libs "$directfb_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:222: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:222: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:222: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$directfb_REQUIRES])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$directfb_CFLAGS])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$directfb_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$directfb_LIBS])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$directfb_NONPKGCONFIG_LIBS])
m4trace:configure.ac:222: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:222: -1- AM_CONDITIONAL([CAIRO_HAS_DIRECTFB_SURFACE], [test "x$use_directfb" = xyes])
m4trace:configure.ac:222: -1- m4_pattern_allow([^CAIRO_HAS_DIRECTFB_SURFACE_TRUE$])
m4trace:configure.ac:222: -1- m4_pattern_allow([^CAIRO_HAS_DIRECTFB_SURFACE_FALSE$])
m4trace:configure.ac:222: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_DIRECTFB_SURFACE_TRUE])
m4trace:configure.ac:222: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_DIRECTFB_SURFACE_FALSE])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_DIRECTFB_SURFACE])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_DIRECTFB_SURFACE])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_DIRECTFB_SURFACE])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_DIRECTFB_SURFACE])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:222: -2- CAIRO_TEXT_WRAP([The directfb surface backend feature is still under active development and is included in this release only as a preview. It does NOT fully work yet and incompatible changes may yet be made to directfb surface backend specific API.], [--- ])
m4trace:configure.ac:222: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [--- The directfb surface backend feature is still under active development
--- and is included in this release only as a preview. It does NOT fully work
--- yet and incompatible changes may yet be made to directfb surface backend
--- specific API.])
m4trace:configure.ac:250: -1- CAIRO_ENABLE_FONT_BACKEND([ft], [FreeType], [auto], [
  ft_REQUIRES="fontconfig"
  PKG_CHECK_MODULES(FONTCONFIG, $ft_REQUIRES,,
		    [AC_MSG_RESULT(no); use_ft="no (requires $ft_REQUIRES)"])

  if test "x$use_ft" = "xyes"; then

    CAIRO_CHECK_FUNCS_WITH_FLAGS(FcFini, [$FONTCONFIG_CFLAGS], [$FONTCONFIG_LIBS])

    PKG_CHECK_MODULES(FREETYPE, freetype2 >= $FREETYPE_MIN_VERSION,
                      [freetype_pkgconfig=yes],
		      [AC_MSG_RESULT(no)
		       freetype_pkgconfig=no])
  
    if test "x$freetype_pkgconfig" = "xyes"; then
      ft_REQUIRES="freetype2 >= $FREETYPE_MIN_VERSION $ft_REQUIRES"
    else
  
      if test -z "$FREETYPE_CONFIG"; then
        AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
      fi
      if test "x$FREETYPE_CONFIG" = "xno" ; then
        use_ft='no (freetype-config not found in path or $FREETYPE_CONFIG)'
      else
        AC_MSG_CHECKING(freetype2 libtool version)

        FREETYPE_VERSION=`$FREETYPE_CONFIG --version`

        VERSION_DEC=`echo $FREETYPE_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
        MIN_VERSION_DEC=`echo $FREETYPE_MIN_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
        if test $VERSION_DEC -lt $MIN_VERSION_DEC; then
          AC_MSG_RESULT($FREETYPE_VERSION - Too old)
          use_ft="no ($FREETYPE_VERSION found; version $FREETYPE_MIN_VERSION from release $FREETYPE_MIN_RELEASE required)"
        else
          AC_MSG_RESULT($FREETYPE_VERSION - OK)

	  ft_NONPKGCONFIG_CFLAGS=`$FREETYPE_CONFIG --cflags`
	  ft_NONPKGCONFIG_LIBS=`$FREETYPE_CONFIG --libs`
        fi
      fi
    fi
  fi
  ft_CFLAGS="$FREETYPE_CFLAGS $FONTCONFIG_CFLAGS"
  ft_LIBS="$FREETYPE_LIBS $FONTCONFIG_LIBS"
])
m4trace:configure.ac:250: -1- _CAIRO_ENABLE([ft], [FreeType font backend], [font], [auto], [
  ft_REQUIRES="fontconfig"
  PKG_CHECK_MODULES(FONTCONFIG, $ft_REQUIRES,,
		    [AC_MSG_RESULT(no); use_ft="no (requires $ft_REQUIRES)"])

  if test "x$use_ft" = "xyes"; then

    CAIRO_CHECK_FUNCS_WITH_FLAGS(FcFini, [$FONTCONFIG_CFLAGS], [$FONTCONFIG_LIBS])

    PKG_CHECK_MODULES(FREETYPE, freetype2 >= $FREETYPE_MIN_VERSION,
                      [freetype_pkgconfig=yes],
		      [AC_MSG_RESULT(no)
		       freetype_pkgconfig=no])
  
    if test "x$freetype_pkgconfig" = "xyes"; then
      ft_REQUIRES="freetype2 >= $FREETYPE_MIN_VERSION $ft_REQUIRES"
    else
  
      if test -z "$FREETYPE_CONFIG"; then
        AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
      fi
      if test "x$FREETYPE_CONFIG" = "xno" ; then
        use_ft='no (freetype-config not found in path or $FREETYPE_CONFIG)'
      else
        AC_MSG_CHECKING(freetype2 libtool version)

        FREETYPE_VERSION=`$FREETYPE_CONFIG --version`

        VERSION_DEC=`echo $FREETYPE_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
        MIN_VERSION_DEC=`echo $FREETYPE_MIN_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
        if test $VERSION_DEC -lt $MIN_VERSION_DEC; then
          AC_MSG_RESULT($FREETYPE_VERSION - Too old)
          use_ft="no ($FREETYPE_VERSION found; version $FREETYPE_MIN_VERSION from release $FREETYPE_MIN_RELEASE required)"
        else
          AC_MSG_RESULT($FREETYPE_VERSION - OK)

	  ft_NONPKGCONFIG_CFLAGS=`$FREETYPE_CONFIG --cflags`
	  ft_NONPKGCONFIG_LIBS=`$FREETYPE_CONFIG --libs`
        fi
      fi
    fi
  fi
  ft_CFLAGS="$FREETYPE_CFLAGS $FONTCONFIG_CFLAGS"
  ft_LIBS="$FREETYPE_LIBS $FONTCONFIG_LIBS"
])
m4trace:configure.ac:250: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:250: -1- PKG_CHECK_MODULES([FONTCONFIG], [$ft_REQUIRES], [], [AC_MSG_RESULT(no); use_ft="no (requires $ft_REQUIRES)"])
m4trace:configure.ac:250: -1- m4_pattern_allow([^FONTCONFIG_CFLAGS$])
m4trace:configure.ac:250: -1- m4_pattern_allow([^FONTCONFIG_LIBS$])
m4trace:configure.ac:250: -1- PKG_CHECK_EXISTS([$ft_REQUIRES], [pkg_cv_[]FONTCONFIG_CFLAGS=`$PKG_CONFIG --[]cflags "$ft_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:250: -1- PKG_CHECK_EXISTS([$ft_REQUIRES], [pkg_cv_[]FONTCONFIG_LIBS=`$PKG_CONFIG --[]libs "$ft_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:250: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:250: -1- CAIRO_CHECK_FUNCS_WITH_FLAGS([FcFini], [$FONTCONFIG_CFLAGS], [$FONTCONFIG_LIBS])
m4trace:configure.ac:250: -1- m4_pattern_allow([^HAVE_FCFINI$])
m4trace:configure.ac:250: -1- PKG_CHECK_MODULES([FREETYPE], [freetype2 >= $FREETYPE_MIN_VERSION], [freetype_pkgconfig=yes], [AC_MSG_RESULT(no)
		       freetype_pkgconfig=no])
m4trace:configure.ac:250: -1- m4_pattern_allow([^FREETYPE_CFLAGS$])
m4trace:configure.ac:250: -1- m4_pattern_allow([^FREETYPE_LIBS$])
m4trace:configure.ac:250: -1- PKG_CHECK_EXISTS([freetype2 >= $FREETYPE_MIN_VERSION], [pkg_cv_[]FREETYPE_CFLAGS=`$PKG_CONFIG --[]cflags "freetype2 >= $FREETYPE_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:250: -1- PKG_CHECK_EXISTS([freetype2 >= $FREETYPE_MIN_VERSION], [pkg_cv_[]FREETYPE_LIBS=`$PKG_CONFIG --[]libs "freetype2 >= $FREETYPE_MIN_VERSION" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:250: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:250: -1- m4_pattern_allow([^FREETYPE_CONFIG$])
m4trace:configure.ac:250: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:250: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$ft_REQUIRES])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$ft_CFLAGS])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$ft_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$ft_LIBS])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$ft_NONPKGCONFIG_LIBS])
m4trace:configure.ac:250: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:250: -1- AM_CONDITIONAL([CAIRO_HAS_FT_FONT], [test "x$use_ft" = xyes])
m4trace:configure.ac:250: -1- m4_pattern_allow([^CAIRO_HAS_FT_FONT_TRUE$])
m4trace:configure.ac:250: -1- m4_pattern_allow([^CAIRO_HAS_FT_FONT_FALSE$])
m4trace:configure.ac:250: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_FT_FONT_TRUE])
m4trace:configure.ac:250: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_FT_FONT_FALSE])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_FT_FONT])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_FT_FONT),1)])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_FT_FONT])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_FT_FONT),1)])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_FT_FONT])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_FT_FONT),1)])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_FT_FONT])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_FT_FONT])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_FT_FONT])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_FT_FONT),1)])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:250: -1- CAIRO_ACCUMULATE([NATIVE_FONT_BACKENDS], [ft])
m4trace:configure.ac:306: -1- m4_pattern_allow([^HAVE_FT_BITMAP_SIZE_Y_PPEM$])
m4trace:configure.ac:324: -1- m4_pattern_allow([^HAVE_PTHREAD_H$])
m4trace:configure.ac:326: -1- AM_CONDITIONAL([HAVE_PTHREAD], [test "x$have_pthread" = "xyes"])
m4trace:configure.ac:326: -1- m4_pattern_allow([^HAVE_PTHREAD_TRUE$])
m4trace:configure.ac:326: -1- m4_pattern_allow([^HAVE_PTHREAD_FALSE$])
m4trace:configure.ac:326: -1- _AM_SUBST_NOTMAKE([HAVE_PTHREAD_TRUE])
m4trace:configure.ac:326: -1- _AM_SUBST_NOTMAKE([HAVE_PTHREAD_FALSE])
m4trace:configure.ac:333: -1- CAIRO_ENABLE_SURFACE_BACKEND([ps], [PostScript], [yes], [
    # The ps backend requires zlib.
    use_ps=$have_libz
    ps_NONPKGCONFIG_LIBS=-lz
])
m4trace:configure.ac:333: -1- _CAIRO_ENABLE([ps], [PostScript surface backend], [surface], [yes], [
    # The ps backend requires zlib.
    use_ps=$have_libz
    ps_NONPKGCONFIG_LIBS=-lz
])
m4trace:configure.ac:333: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:333: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:333: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$ps_REQUIRES])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$ps_CFLAGS])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$ps_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$ps_LIBS])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$ps_NONPKGCONFIG_LIBS])
m4trace:configure.ac:333: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:333: -1- AM_CONDITIONAL([CAIRO_HAS_PS_SURFACE], [test "x$use_ps" = xyes])
m4trace:configure.ac:333: -1- m4_pattern_allow([^CAIRO_HAS_PS_SURFACE_TRUE$])
m4trace:configure.ac:333: -1- m4_pattern_allow([^CAIRO_HAS_PS_SURFACE_FALSE$])
m4trace:configure.ac:333: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_PS_SURFACE_TRUE])
m4trace:configure.ac:333: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_PS_SURFACE_FALSE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_PS_SURFACE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_PS_SURFACE),1)])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_PS_SURFACE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_PS_SURFACE),1)])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_PS_SURFACE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_PS_SURFACE),1)])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_PS_SURFACE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_PS_SURFACE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_PS_SURFACE])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_PS_SURFACE),1)])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:333: -2- CAIRO_TEXT_WRAP([It is strictly recommended that you do NOT disable the PostScript surface backend feature.], [+++ ])
m4trace:configure.ac:333: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [+++ It is strictly recommended that you do NOT disable the PostScript surface
+++ backend feature.])
m4trace:configure.ac:345: -1- m4_pattern_allow([^GS$])
m4trace:configure.ac:347: -1- m4_pattern_allow([^CAIRO_CAN_TEST_PS_SURFACE$])
m4trace:configure.ac:355: -1- PKG_CHECK_MODULES([LIBSPECTRE], [$libspectre_DEPENDENCY], [any2ppm_ps=yes], [AC_MSG_RESULT(no)])
m4trace:configure.ac:355: -1- m4_pattern_allow([^LIBSPECTRE_CFLAGS$])
m4trace:configure.ac:355: -1- m4_pattern_allow([^LIBSPECTRE_LIBS$])
m4trace:configure.ac:355: -1- PKG_CHECK_EXISTS([$libspectre_DEPENDENCY], [pkg_cv_[]LIBSPECTRE_CFLAGS=`$PKG_CONFIG --[]cflags "$libspectre_DEPENDENCY" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:355: -1- PKG_CHECK_EXISTS([$libspectre_DEPENDENCY], [pkg_cv_[]LIBSPECTRE_LIBS=`$PKG_CONFIG --[]libs "$libspectre_DEPENDENCY" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:355: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:360: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_PS_SURFACE], [test "x$test_ps" = "xyes"])
m4trace:configure.ac:360: -1- m4_pattern_allow([^CAIRO_CAN_TEST_PS_SURFACE_TRUE$])
m4trace:configure.ac:360: -1- m4_pattern_allow([^CAIRO_CAN_TEST_PS_SURFACE_FALSE$])
m4trace:configure.ac:360: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_PS_SURFACE_TRUE])
m4trace:configure.ac:360: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_PS_SURFACE_FALSE])
m4trace:configure.ac:361: -1- AM_CONDITIONAL([CAIRO_HAS_SPECTRE], [test "x$any2ppm_ps" = "xyes"])
m4trace:configure.ac:361: -1- m4_pattern_allow([^CAIRO_HAS_SPECTRE_TRUE$])
m4trace:configure.ac:361: -1- m4_pattern_allow([^CAIRO_HAS_SPECTRE_FALSE$])
m4trace:configure.ac:361: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_SPECTRE_TRUE])
m4trace:configure.ac:361: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_SPECTRE_FALSE])
m4trace:configure.ac:363: -1- m4_pattern_allow([^CAIRO_HAS_SPECTRE$])
m4trace:configure.ac:365: -1- m4_pattern_allow([^LIBSPECTRE_CFLAGS$])
m4trace:configure.ac:366: -1- m4_pattern_allow([^LIBSPECTRE_LIBS$])
m4trace:configure.ac:370: -1- CAIRO_ENABLE_SURFACE_BACKEND([pdf], [PDF], [yes], [
    # The pdf backend requires zlib.
    use_pdf=$have_libz
    pdf_NONPKGCONFIG_LIBS=-lz
])
m4trace:configure.ac:370: -1- _CAIRO_ENABLE([pdf], [PDF surface backend], [surface], [yes], [
    # The pdf backend requires zlib.
    use_pdf=$have_libz
    pdf_NONPKGCONFIG_LIBS=-lz
])
m4trace:configure.ac:370: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:370: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:370: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$pdf_REQUIRES])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$pdf_CFLAGS])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$pdf_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$pdf_LIBS])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$pdf_NONPKGCONFIG_LIBS])
m4trace:configure.ac:370: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:370: -1- AM_CONDITIONAL([CAIRO_HAS_PDF_SURFACE], [test "x$use_pdf" = xyes])
m4trace:configure.ac:370: -1- m4_pattern_allow([^CAIRO_HAS_PDF_SURFACE_TRUE$])
m4trace:configure.ac:370: -1- m4_pattern_allow([^CAIRO_HAS_PDF_SURFACE_FALSE$])
m4trace:configure.ac:370: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_PDF_SURFACE_TRUE])
m4trace:configure.ac:370: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_PDF_SURFACE_FALSE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_PDF_SURFACE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_PDF_SURFACE),1)])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_PDF_SURFACE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_PDF_SURFACE),1)])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_PDF_SURFACE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_PDF_SURFACE),1)])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_PDF_SURFACE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_PDF_SURFACE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_PDF_SURFACE])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_PDF_SURFACE),1)])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:370: -2- CAIRO_TEXT_WRAP([It is strictly recommended that you do NOT disable the PDF surface backend feature.], [+++ ])
m4trace:configure.ac:370: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [+++ It is strictly recommended that you do NOT disable the PDF surface
+++ backend feature.])
m4trace:configure.ac:385: -1- PKG_CHECK_MODULES([POPPLER], [$poppler_DEPENDENCY pango gtk+-2.0], [CAIRO_CHECK_FUNCS_WITH_FLAGS(poppler_page_render, [$POPPLER_CFLAGS], [$POPPLER_LIBS],
                    [test_pdf=yes; any2ppm_pdf=yes],
		    [AC_MSG_RESULT(no); test_pdf="no (requires $poppler_DEPENDENCY)"])], [AC_MSG_RESULT(no); test_pdf="no (requires $poppler_DEPENDENCY)"])
m4trace:configure.ac:385: -1- m4_pattern_allow([^POPPLER_CFLAGS$])
m4trace:configure.ac:385: -1- m4_pattern_allow([^POPPLER_LIBS$])
m4trace:configure.ac:385: -1- PKG_CHECK_EXISTS([$poppler_DEPENDENCY pango gtk+-2.0], [pkg_cv_[]POPPLER_CFLAGS=`$PKG_CONFIG --[]cflags "$poppler_DEPENDENCY pango gtk+-2.0" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:385: -1- PKG_CHECK_EXISTS([$poppler_DEPENDENCY pango gtk+-2.0], [pkg_cv_[]POPPLER_LIBS=`$PKG_CONFIG --[]libs "$poppler_DEPENDENCY pango gtk+-2.0" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:385: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:385: -1- CAIRO_CHECK_FUNCS_WITH_FLAGS([poppler_page_render], [$POPPLER_CFLAGS], [$POPPLER_LIBS], [test_pdf=yes; any2ppm_pdf=yes], [AC_MSG_RESULT(no); test_pdf="no (requires $poppler_DEPENDENCY)"])
m4trace:configure.ac:385: -1- m4_pattern_allow([^HAVE_POPPLER_PAGE_RENDER$])
m4trace:configure.ac:391: -1- m4_pattern_allow([^CAIRO_CAN_TEST_PDF_SURFACE$])
m4trace:configure.ac:397: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_PDF_SURFACE], [test "x$test_pdf" = "xyes"])
m4trace:configure.ac:397: -1- m4_pattern_allow([^CAIRO_CAN_TEST_PDF_SURFACE_TRUE$])
m4trace:configure.ac:397: -1- m4_pattern_allow([^CAIRO_CAN_TEST_PDF_SURFACE_FALSE$])
m4trace:configure.ac:397: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_PDF_SURFACE_TRUE])
m4trace:configure.ac:397: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_PDF_SURFACE_FALSE])
m4trace:configure.ac:398: -1- m4_pattern_allow([^POPPLER_CFLAGS$])
m4trace:configure.ac:399: -1- m4_pattern_allow([^POPPLER_LIBS$])
m4trace:configure.ac:401: -1- AM_CONDITIONAL([CAIRO_HAS_MULTI_PAGE_SURFACES], [test "x$use_ps" = "xyes" -o "x$use_pdf" = "xyes"])
m4trace:configure.ac:401: -1- m4_pattern_allow([^CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE$])
m4trace:configure.ac:401: -1- m4_pattern_allow([^CAIRO_HAS_MULTI_PAGE_SURFACES_FALSE$])
m4trace:configure.ac:401: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE])
m4trace:configure.ac:401: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_MULTI_PAGE_SURFACES_FALSE])
m4trace:configure.ac:405: -1- CAIRO_ENABLE_SURFACE_BACKEND([svg], [SVG], [yes], [
  if test "x$use_png" != "xyes"; then
    use_svg="no (requires --enable-png)"
  fi
])
m4trace:configure.ac:405: -1- _CAIRO_ENABLE([svg], [SVG surface backend], [surface], [yes], [
  if test "x$use_png" != "xyes"; then
    use_svg="no (requires --enable-png)"
  fi
])
m4trace:configure.ac:405: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:405: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:405: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$svg_REQUIRES])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$svg_CFLAGS])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$svg_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$svg_LIBS])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$svg_NONPKGCONFIG_LIBS])
m4trace:configure.ac:405: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:405: -1- AM_CONDITIONAL([CAIRO_HAS_SVG_SURFACE], [test "x$use_svg" = xyes])
m4trace:configure.ac:405: -1- m4_pattern_allow([^CAIRO_HAS_SVG_SURFACE_TRUE$])
m4trace:configure.ac:405: -1- m4_pattern_allow([^CAIRO_HAS_SVG_SURFACE_FALSE$])
m4trace:configure.ac:405: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_SVG_SURFACE_TRUE])
m4trace:configure.ac:405: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_SVG_SURFACE_FALSE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_SVG_SURFACE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_SVG_SURFACE),1)])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_SVG_SURFACE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_SVG_SURFACE),1)])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_SVG_SURFACE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_SVG_SURFACE),1)])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_SVG_SURFACE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_SVG_SURFACE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_SVG_SURFACE])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_SVG_SURFACE),1)])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:405: -2- CAIRO_TEXT_WRAP([It is strictly recommended that you do NOT disable the SVG surface backend feature.], [+++ ])
m4trace:configure.ac:405: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [+++ It is strictly recommended that you do NOT disable the SVG surface
+++ backend feature.])
m4trace:configure.ac:416: -1- PKG_CHECK_MODULES([LIBRSVG], [$librsvg_DEPENDENCY gdk-2.0], [CAIRO_CHECK_FUNCS_WITH_FLAGS(rsvg_pixbuf_from_file, [$LIBRSVG_CFLAGS], [$LIBRSVG_LIBS],
                    [test_svg=yes; any2ppm_svg=yes],
		    [AC_MSG_RESULT(no); test_svg="no (requires $librsvg_DEPENDENCY)"])], [AC_MSG_RESULT(no); test_svg="no (requires $librsvg_DEPENDENCY)"])
m4trace:configure.ac:416: -1- m4_pattern_allow([^LIBRSVG_CFLAGS$])
m4trace:configure.ac:416: -1- m4_pattern_allow([^LIBRSVG_LIBS$])
m4trace:configure.ac:416: -1- PKG_CHECK_EXISTS([$librsvg_DEPENDENCY gdk-2.0], [pkg_cv_[]LIBRSVG_CFLAGS=`$PKG_CONFIG --[]cflags "$librsvg_DEPENDENCY gdk-2.0" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:416: -1- PKG_CHECK_EXISTS([$librsvg_DEPENDENCY gdk-2.0], [pkg_cv_[]LIBRSVG_LIBS=`$PKG_CONFIG --[]libs "$librsvg_DEPENDENCY gdk-2.0" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:416: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:416: -1- CAIRO_CHECK_FUNCS_WITH_FLAGS([rsvg_pixbuf_from_file], [$LIBRSVG_CFLAGS], [$LIBRSVG_LIBS], [test_svg=yes; any2ppm_svg=yes], [AC_MSG_RESULT(no); test_svg="no (requires $librsvg_DEPENDENCY)"])
m4trace:configure.ac:416: -1- m4_pattern_allow([^HAVE_RSVG_PIXBUF_FROM_FILE$])
m4trace:configure.ac:422: -1- m4_pattern_allow([^CAIRO_CAN_TEST_SVG_SURFACE$])
m4trace:configure.ac:428: -1- AM_CONDITIONAL([CAIRO_CAN_TEST_SVG_SURFACE], [test "x$test_svg" = "xyes"])
m4trace:configure.ac:428: -1- m4_pattern_allow([^CAIRO_CAN_TEST_SVG_SURFACE_TRUE$])
m4trace:configure.ac:428: -1- m4_pattern_allow([^CAIRO_CAN_TEST_SVG_SURFACE_FALSE$])
m4trace:configure.ac:428: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_SVG_SURFACE_TRUE])
m4trace:configure.ac:428: -1- _AM_SUBST_NOTMAKE([CAIRO_CAN_TEST_SVG_SURFACE_FALSE])
m4trace:configure.ac:429: -1- m4_pattern_allow([^LIBRSVG_CFLAGS$])
m4trace:configure.ac:430: -1- m4_pattern_allow([^LIBRSVG_LIBS$])
m4trace:configure.ac:435: -1- CAIRO_ENABLE([test_surfaces], [test surfaces], [no])
m4trace:configure.ac:435: -1- _CAIRO_ENABLE([test_surfaces], [test surfaces], [], [no], [])
m4trace:configure.ac:435: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:435: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:435: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$test_surfaces_REQUIRES])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$test_surfaces_CFLAGS])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$test_surfaces_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$test_surfaces_LIBS])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$test_surfaces_NONPKGCONFIG_LIBS])
m4trace:configure.ac:435: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:435: -1- AM_CONDITIONAL([CAIRO_HAS_TEST_SURFACES], [test "x$use_test_surfaces" = xyes])
m4trace:configure.ac:435: -1- m4_pattern_allow([^CAIRO_HAS_TEST_SURFACES_TRUE$])
m4trace:configure.ac:435: -1- m4_pattern_allow([^CAIRO_HAS_TEST_SURFACES_FALSE$])
m4trace:configure.ac:435: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_TEST_SURFACES_TRUE])
m4trace:configure.ac:435: -1- _AM_SUBST_NOTMAKE([CAIRO_HAS_TEST_SURFACES_FALSE])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE___WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [if CAIRO_HAS_TEST_SURFACES])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_AMAKE], [endif])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [ifeq ($(CAIRO_HAS_TEST_SURFACES),1)])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_WIN32], [endif])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [if CAIRO_HAS_TEST_SURFACES])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_AMAKE], [endif])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [ifeq ($(CAIRO_HAS_TEST_SURFACES),1)])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_cairo_boilerplate_WIN32], [endif])
m4trace:configure.ac:435: -1- m4_pattern_allow([^CAIRO_HAS_TEST_SURFACES$])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [ifeq ($(CAIRO_HAS_TEST_SURFACES),1)])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:435: -1- CAIRO_ACCUMULATE([MAKEFILE_win32_features_h_WIN32], [endif])
m4trace:configure.ac:439: -1- CAIRO_ENABLE_SURFACE_BACKEND([image], [image], [always], [
  pixman_REQUIRES="qpixman-1 >= 0.12.0"
  PKG_CHECK_MODULES(pixman, $pixman_REQUIRES, , [AC_MSG_RESULT(no)
  use_image="no (requires $pixman_REQUIRES http://cairographics.org/releases/)"])
  image_REQUIRES=$pixman_REQUIRES
  image_CFLAGS=$pixman_CFLAGS
  image_LIBS=$pixman_LIBS
])
m4trace:configure.ac:439: -1- _CAIRO_ENABLE([image], [image surface backend], [surface], [always], [
  pixman_REQUIRES="qpixman-1 >= 0.12.0"
  PKG_CHECK_MODULES(pixman, $pixman_REQUIRES, , [AC_MSG_RESULT(no)
  use_image="no (requires $pixman_REQUIRES http://cairographics.org/releases/)"])
  image_REQUIRES=$pixman_REQUIRES
  image_CFLAGS=$pixman_CFLAGS
  image_LIBS=$pixman_LIBS
])
m4trace:configure.ac:439: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:439: -1- PKG_CHECK_MODULES([pixman], [$pixman_REQUIRES], [], [AC_MSG_RESULT(no)
  use_image="no (requires $pixman_REQUIRES http://cairographics.org/releases/)"])
m4trace:configure.ac:439: -1- m4_pattern_allow([^pixman_CFLAGS$])
m4trace:configure.ac:439: -1- m4_pattern_allow([^pixman_LIBS$])
m4trace:configure.ac:439: -1- PKG_CHECK_EXISTS([$pixman_REQUIRES], [pkg_cv_[]pixman_CFLAGS=`$PKG_CONFIG --[]cflags "$pixman_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:439: -1- PKG_CHECK_EXISTS([$pixman_REQUIRES], [pkg_cv_[]pixman_LIBS=`$PKG_CONFIG --[]libs "$pixman_REQUIRES" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:439: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:439: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:439: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$image_REQUIRES])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$image_CFLAGS])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$image_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$image_LIBS])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$image_NONPKGCONFIG_LIBS])
m4trace:configure.ac:439: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_IMAGE_SURFACE])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_IMAGE_SURFACE])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_IMAGE_SURFACE])
m4trace:configure.ac:439: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ENABLE_FONT_BACKEND([user], [user], [always])
m4trace:configure.ac:450: -1- _CAIRO_ENABLE([user], [user font backend], [font], [always], [])
m4trace:configure.ac:450: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=]_CAIRO_SH_ESCAPE_UNQUOTED(m4_do([cr_var_default_]cr_var[_value]))
])
m4trace:configure.ac:450: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [[cairo_cv_]cr_feature[_]cr_var[=$]cr_feature[_]cr_var
])
m4trace:configure.ac:450: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATED_FEATURE_VARS_FOREACH([cr_var], [dnl
			CAIRO_ACCUMULATE_UNQUOTED_BEFORE(cr_var, [$]cr_feature[_]cr_var)
		])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([REQUIRES], [$user_REQUIRES])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([CFLAGS], [$user_CFLAGS])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_CFLAGS], [$user_NONPKGCONFIG_CFLAGS])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([LIBS], [$user_LIBS])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_BEFORE([NONPKGCONFIG_LIBS], [$user_NONPKGCONFIG_LIBS])
m4trace:configure.ac:450: -1- CAIRO_FEATURE_VARS_FOREACH([cr_var], [cr_feature[_]cr_var[=$cairo_cv_]cr_feature[_]cr_var
])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_AMAKE], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_cairo_boilerplate_WIN32], [$cr_make_tmp])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE([FEATURES], [CAIRO_HAS_USER_FONT])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE([SUPPORTED_FEATURES], [CAIRO_HAS_USER_FONT])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE([NO_FEATURES], [CAIRO_HAS_USER_FONT])
m4trace:configure.ac:450: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:454: -1- AM_CONDITIONAL([BUILD_ANY2PPM], [test "x$any2ppm_svg" = "xyes" \
	         -o "x$any2ppm_pdf" = "xyes" \
		 -o "x$any2ppm_ps"  = "xyes"])
m4trace:configure.ac:454: -1- m4_pattern_allow([^BUILD_ANY2PPM_TRUE$])
m4trace:configure.ac:454: -1- m4_pattern_allow([^BUILD_ANY2PPM_FALSE$])
m4trace:configure.ac:454: -1- _AM_SUBST_NOTMAKE([BUILD_ANY2PPM_TRUE])
m4trace:configure.ac:454: -1- _AM_SUBST_NOTMAKE([BUILD_ANY2PPM_FALSE])
m4trace:configure.ac:474: -1- AM_CONDITIONAL([DISABLE_SOME_FLOATING_POINT], [test "x$disable_some_floating_point" = "xyes"])
m4trace:configure.ac:474: -1- m4_pattern_allow([^DISABLE_SOME_FLOATING_POINT_TRUE$])
m4trace:configure.ac:474: -1- m4_pattern_allow([^DISABLE_SOME_FLOATING_POINT_FALSE$])
m4trace:configure.ac:474: -1- _AM_SUBST_NOTMAKE([DISABLE_SOME_FLOATING_POINT_TRUE])
m4trace:configure.ac:474: -1- _AM_SUBST_NOTMAKE([DISABLE_SOME_FLOATING_POINT_FALSE])
m4trace:configure.ac:477: -1- m4_pattern_allow([^DISABLE_SOME_FLOATING_POINT$])
m4trace:configure.ac:485: -1- PKG_CHECK_MODULES([gtk], ["gtk+-2.0"], [], [{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }])
m4trace:configure.ac:485: -1- m4_pattern_allow([^gtk_CFLAGS$])
m4trace:configure.ac:485: -1- m4_pattern_allow([^gtk_LIBS$])
m4trace:configure.ac:485: -1- PKG_CHECK_EXISTS(["gtk+-2.0"], [pkg_cv_[]gtk_CFLAGS=`$PKG_CONFIG --[]cflags ""gtk+-2.0"" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:485: -1- PKG_CHECK_EXISTS(["gtk+-2.0"], [pkg_cv_[]gtk_LIBS=`$PKG_CONFIG --[]libs ""gtk+-2.0"" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:485: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:499: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:499: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:499: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:499: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:499: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:499: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:499: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:499: -1- CAIRO_MAKEFILE_ACCUMULATE([win32_features_h], [	@echo "[#]endif" >>  src/cairo-features.h])
m4trace:configure.ac:499: -1- CAIRO_ACCUMULATE_UNQUOTED_UNCHECKED([MAKEFILE_win32_features_h_WIN32], [$cr_make_tmp])
m4trace:configure.ac:499: -2- CAIRO_TEXT_WRAP([It is strictly recommended that you enable the native surface backend feature for your platform.], [*** ])
m4trace:configure.ac:499: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [*** It is strictly recommended that you enable the native surface backend
*** feature for your platform.])
m4trace:configure.ac:499: -2- CAIRO_TEXT_WRAP([It is strictly recommended that you enable the native font backend feature for your platform.], [*** ])
m4trace:configure.ac:499: -1- CAIRO_ACCUMULATE([WARNING_MESSAGE], [*** It is strictly recommended that you enable the native font backend
*** feature for your platform.])
m4trace:configure.ac:499: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:499: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:499: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:500: -1- CAIRO_REPORT
